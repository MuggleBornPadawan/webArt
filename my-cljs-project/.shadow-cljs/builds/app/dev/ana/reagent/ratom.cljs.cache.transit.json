["^ ","~:output",["^ ","~:js","goog.provide('reagent.ratom');\ngoog.scope(function(){\n  reagent.ratom.goog$module$goog$object = goog.module.get('goog.object');\n});\nif((typeof reagent !== 'undefined') && (typeof reagent.ratom !== 'undefined') && (typeof reagent.ratom.debug !== 'undefined')){\n} else {\nreagent.ratom.debug = false;\n}\nif((typeof reagent !== 'undefined') && (typeof reagent.ratom !== 'undefined') && (typeof reagent.ratom.generation !== 'undefined')){\n} else {\nreagent.ratom.generation = (0);\n}\nif((typeof reagent !== 'undefined') && (typeof reagent.ratom !== 'undefined') && (typeof reagent.ratom._running !== 'undefined')){\n} else {\nreagent.ratom._running = cljs.core.atom.cljs$core$IFn$_invoke$arity$1((0));\n}\nreagent.ratom.reactive_QMARK_ = (function reagent$ratom$reactive_QMARK_(){\nreturn (!((reagent.ratom._STAR_ratom_context_STAR_ == null)));\n});\nreagent.ratom.running = (function reagent$ratom$running(){\nreturn (cljs.core.deref(reagent.ratom._running));\n});\nreagent.ratom.arr_len = (function reagent$ratom$arr_len(x){\nif((x == null)){\nreturn (0);\n} else {\nreturn x.length;\n}\n});\nreagent.ratom.arr_eq = (function reagent$ratom$arr_eq(x,y){\nvar len = reagent.ratom.arr_len(x);\nvar and__5023__auto__ = (len === reagent.ratom.arr_len(y));\nif(and__5023__auto__){\nvar i = (0);\nwhile(true){\nvar or__5025__auto__ = (i === len);\nif(or__5025__auto__){\nreturn or__5025__auto__;\n} else {\nif(((x[i]) === (y[i]))){\nvar G__8469 = (i + (1));\ni = G__8469;\ncontinue;\n} else {\nreturn false;\n}\n}\nbreak;\n}\n} else {\nreturn and__5023__auto__;\n}\n});\n/**\n * When f is executed, if (f) derefs any ratoms, they are then added to 'obj.captured'(*ratom-context*).\n * \n *   See function notify-deref-watcher! to know how *ratom-context* is updated\n */\nreagent.ratom.in_context = (function reagent$ratom$in_context(obj,f){\nvar _STAR_ratom_context_STAR__orig_val__8013 = reagent.ratom._STAR_ratom_context_STAR_;\nvar _STAR_ratom_context_STAR__temp_val__8014 = obj;\n(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__temp_val__8014);\n\ntry{return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\n}finally {(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__orig_val__8013);\n}});\n/**\n * Returns `(in-context r f)`.  Calls `_update-watching` on r with any\n *   `deref`ed atoms captured during `in-context`, if any differ from the\n *   `watching` field of r.  Clears the `dirty?` flag on r.\n * \n *   Inside '_update-watching' along with adding the ratoms in 'r.watching' of reaction,\n *   the reaction is also added to the list of watches on each ratoms f derefs.\n */\nreagent.ratom.deref_capture = (function reagent$ratom$deref_capture(f,r){\n(r.captured = null);\n\n(r.ratomGeneration = (reagent.ratom.generation = (reagent.ratom.generation + (1))));\n\n\nvar res = reagent.ratom.in_context(r,f);\nvar c = r.captured;\n(r.dirty_QMARK_ = false);\n\nif(reagent.ratom.arr_eq(c,r.watching)){\n} else {\nr._update_watching(c);\n}\n\nreturn res;\n});\n/**\n * Add `derefed` to the `captured` field of `*ratom-context*`.\n * \n *   See also `in-context`\n */\nreagent.ratom.notify_deref_watcher_BANG_ = (function reagent$ratom$notify_deref_watcher_BANG_(derefed){\nvar temp__5827__auto__ = reagent.ratom._STAR_ratom_context_STAR_;\nif((temp__5827__auto__ == null)){\nreturn null;\n} else {\nvar r = temp__5827__auto__;\nvar c = r.captured;\nif((c == null)){\nreturn (r.captured = [derefed]);\n} else {\nreturn c.push(derefed);\n}\n}\n});\nreagent.ratom.check_watches = (function reagent$ratom$check_watches(old,new$){\nif(reagent.ratom.debug){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(reagent.ratom._running,cljs.core._PLUS_,(cljs.core.count(new$) - cljs.core.count(old)));\n} else {\n}\n\nreturn new$;\n});\nreagent.ratom.add_w = (function reagent$ratom$add_w(this$,key,f){\nvar w = this$.watches;\n(this$.watches = reagent.ratom.check_watches(w,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(w,key,f)));\n\nreturn (this$.watchesArr = null);\n});\nreagent.ratom.remove_w = (function reagent$ratom$remove_w(this$,key){\nvar w = this$.watches;\n(this$.watches = reagent.ratom.check_watches(w,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(w,key)));\n\nreturn (this$.watchesArr = null);\n});\nreagent.ratom.notify_w = (function reagent$ratom$notify_w(this$,old,new$){\nvar w = this$.watchesArr;\nvar a = (((w == null))?(this$.watchesArr = cljs.core.reduce_kv((function (p1__8015_SHARP_,p2__8016_SHARP_,p3__8017_SHARP_){\nvar G__8018 = p1__8015_SHARP_;\nG__8018.push(p2__8016_SHARP_);\n\nG__8018.push(p3__8017_SHARP_);\n\nreturn G__8018;\n}),[],this$.watches)):w);\nvar len = a.length;\nvar i = (0);\nwhile(true){\nif((i < len)){\nvar k_8475 = (a[i]);\nvar f_8476 = (a[(i + (1))]);\n(f_8476.cljs$core$IFn$_invoke$arity$4 ? f_8476.cljs$core$IFn$_invoke$arity$4(k_8475,this$,old,new$) : f_8476.call(null,k_8475,this$,old,new$));\n\nvar G__8477 = ((2) + i);\ni = G__8477;\ncontinue;\n} else {\nreturn null;\n}\nbreak;\n}\n});\nreagent.ratom.pr_atom = (function reagent$ratom$pr_atom(a,writer,opts,s,v){\ncljs.core._write(writer,[\"#object[reagent.ratom.\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(s),\" \"].join(''));\n\ncljs.core.pr_writer((function (){var _STAR_ratom_context_STAR__orig_val__8023 = reagent.ratom._STAR_ratom_context_STAR_;\nvar _STAR_ratom_context_STAR__temp_val__8024 = null;\n(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__temp_val__8024);\n\ntry{return v;\n}finally {(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__orig_val__8023);\n}})(),writer,opts);\n\nreturn cljs.core._write(writer,\"]\");\n});\nif((typeof reagent !== 'undefined') && (typeof reagent.ratom !== 'undefined') && (typeof reagent.ratom.rea_queue !== 'undefined')){\n} else {\nreagent.ratom.rea_queue = null;\n}\nreagent.ratom.rea_enqueue = (function reagent$ratom$rea_enqueue(r){\nif((reagent.ratom.rea_queue == null)){\n(reagent.ratom.rea_queue = []);\n\nreagent.impl.batching.schedule();\n} else {\n}\n\nreturn reagent.ratom.rea_queue.push(r);\n});\n\n/**\n * @interface\n */\nreagent.ratom.IReactiveAtom = function(){};\n\n\n/**\n* @constructor\n * @implements {cljs.core.IWatchable}\n * @implements {cljs.core.IAtom}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.IReset}\n * @implements {cljs.core.ISwap}\n * @implements {reagent.ratom.IReactiveAtom}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.IWithMeta}\n*/\nreagent.ratom.RAtom = (function (state,meta,validator,watches){\nthis.state = state;\nthis.meta = meta;\nthis.validator = validator;\nthis.watches = watches;\nthis.cljs$lang$protocol_mask$partition0$ = 2154201088;\nthis.cljs$lang$protocol_mask$partition1$ = 114690;\n});\n(reagent.ratom.RAtom.prototype.reagent$ratom$IReactiveAtom$ = cljs.core.PROTOCOL_SENTINEL);\n\n(reagent.ratom.RAtom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\nvar self__ = this;\nvar a__$1 = this;\nreturn reagent.ratom.pr_atom(a__$1,w,opts,\"RAtom\",new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"val\",\"val\",128701612),a__$1.cljs$core$IDeref$_deref$arity$1(null)], null));\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn self__.meta;\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn goog.getUid(this$__$1);\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){\nvar self__ = this;\nvar o__$1 = this;\nreturn (o__$1 === other);\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = (function (a,new_value){\nvar self__ = this;\nvar a__$1 = this;\nif((self__.validator == null)){\n} else {\nif(cljs.core.truth_((self__.validator.cljs$core$IFn$_invoke$arity$1 ? self__.validator.cljs$core$IFn$_invoke$arity$1(new_value) : self__.validator.call(null,new_value)))){\n} else {\nthrow (new Error([\"Assert failed: \",\"Validator rejected reference state\",\"\\n\",\"(validator new-value)\"].join('')));\n}\n}\n\nvar old_value = self__.state;\n(self__.state = new_value);\n\nif((self__.watches == null)){\n} else {\nreagent.ratom.notify_w(a__$1,old_value,new_value);\n}\n\nreturn new_value;\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = (function (a,f){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(self__.state) : f.call(null,self__.state)));\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = (function (a,f,x){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(self__.state,x) : f.call(null,self__.state,x)));\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = (function (a,f,x,y){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(self__.state,x,y) : f.call(null,self__.state,x,y)));\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = (function (a,f,x,y,more){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,self__.state,x,y,more));\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,old,new$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.notify_w(this$__$1,old,new$);\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.add_w(this$__$1,key,f);\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.remove_w(this$__$1,key);\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){\nvar self__ = this;\nvar ___$1 = this;\nreturn (new reagent.ratom.RAtom(self__.state,new_meta,self__.validator,self__.watches));\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nreagent.ratom.notify_deref_watcher_BANG_(this$__$1);\n\nreturn self__.state;\n}));\n\n(reagent.ratom.RAtom.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\"state\",\"state\",-348086572,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),new cljs.core.Symbol(null,\"meta\",\"meta\",-1154898805,null),new cljs.core.Symbol(null,\"validator\",\"validator\",-325659154,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"watches\",\"watches\",1367433992,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\n}));\n\n(reagent.ratom.RAtom.cljs$lang$type = true);\n\n(reagent.ratom.RAtom.cljs$lang$ctorStr = \"reagent.ratom/RAtom\");\n\n(reagent.ratom.RAtom.cljs$lang$ctorPrWriter = (function (this__5310__auto__,writer__5311__auto__,opt__5312__auto__){\nreturn cljs.core._write(writer__5311__auto__,\"reagent.ratom/RAtom\");\n}));\n\n/**\n * Positional factory function for reagent.ratom/RAtom.\n */\nreagent.ratom.__GT_RAtom = (function reagent$ratom$__GT_RAtom(state,meta,validator,watches){\nreturn (new reagent.ratom.RAtom(state,meta,validator,watches));\n});\n\n/**\n * Like clojure.core/atom, except that it keeps track of derefs.\n */\nreagent.ratom.atom = (function reagent$ratom$atom(var_args){\nvar G__8038 = arguments.length;\nswitch (G__8038) {\ncase 1:\nreturn reagent.ratom.atom.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ndefault:\nvar args_arr__5774__auto__ = [];\nvar len__5749__auto___8482 = arguments.length;\nvar i__5750__auto___8483 = (0);\nwhile(true){\nif((i__5750__auto___8483 < len__5749__auto___8482)){\nargs_arr__5774__auto__.push((arguments[i__5750__auto___8483]));\n\nvar G__8484 = (i__5750__auto___8483 + (1));\ni__5750__auto___8483 = G__8484;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5775__auto__ = ((((1) < args_arr__5774__auto__.length))?(new cljs.core.IndexedSeq(args_arr__5774__auto__.slice((1)),(0),null)):null);\nreturn reagent.ratom.atom.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5775__auto__);\n\n}\n});\n\n(reagent.ratom.atom.cljs$core$IFn$_invoke$arity$1 = (function (x){\nreturn reagent.ratom.__GT_RAtom(x,null,null,null);\n}));\n\n(reagent.ratom.atom.cljs$core$IFn$_invoke$arity$variadic = (function (x,p__8040){\nvar map__8041 = p__8040;\nvar map__8041__$1 = cljs.core.__destructure_map(map__8041);\nvar meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__8041__$1,new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964));\nvar validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__8041__$1,new cljs.core.Keyword(null,\"validator\",\"validator\",-1966190681));\nreturn reagent.ratom.__GT_RAtom(x,meta,validator,null);\n}));\n\n/** @this {Function} */\n(reagent.ratom.atom.cljs$lang$applyTo = (function (seq8036){\nvar G__8037 = cljs.core.first(seq8036);\nvar seq8036__$1 = cljs.core.next(seq8036);\nvar self__5734__auto__ = this;\nreturn self__5734__auto__.cljs$core$IFn$_invoke$arity$variadic(G__8037,seq8036__$1);\n}));\n\n(reagent.ratom.atom.cljs$lang$maxFixedArity = (1));\n\nreagent.ratom.cached_reaction = (function reagent$ratom$cached_reaction(f,o,k,obj,destroy){\nvar m = o.reagReactionCache;\nvar m__$1 = (((m == null))?cljs.core.PersistentArrayMap.EMPTY:m);\nvar r = (m__$1.cljs$core$IFn$_invoke$arity$2 ? m__$1.cljs$core$IFn$_invoke$arity$2(k,null) : m__$1.call(null,k,null));\nif((!((r == null)))){\nreturn cljs.core._deref(r);\n} else {\nif((reagent.ratom._STAR_ratom_context_STAR_ == null)){\nreturn (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\n} else {\nvar r__$1 = (function (){var G__8047 = f;\nvar G__8048 = new cljs.core.Keyword(null,\"on-dispose\",\"on-dispose\",2105306360);\nvar G__8049 = (function (x){\nif(reagent.ratom.debug){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(reagent.ratom._running,cljs.core.dec);\n} else {\n}\n\nvar __8488 = o.reagReactionCache;\nvar __8489__$1 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(__8488,k);\n(o.reagReactionCache = __8489__$1);\n\nif((!((obj == null)))){\n(obj.reaction = null);\n} else {\n}\n\nif((!((destroy == null)))){\nreturn (destroy.cljs$core$IFn$_invoke$arity$1 ? destroy.cljs$core$IFn$_invoke$arity$1(x) : destroy.call(null,x));\n} else {\nreturn null;\n}\n});\nreturn (reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$3 ? reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$3(G__8047,G__8048,G__8049) : reagent.ratom.make_reaction.call(null,G__8047,G__8048,G__8049));\n})();\nvar v = cljs.core._deref(r__$1);\n(o.reagReactionCache = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m__$1,k,r__$1));\n\nif(reagent.ratom.debug){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(reagent.ratom._running,cljs.core.inc);\n} else {\n}\n\nif((!((obj == null)))){\n(obj.reaction = r__$1);\n} else {\n}\n\nreturn v;\n\n}\n}\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {reagent.ratom.IReactiveAtom}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IPrintWithWriter}\n*/\nreagent.ratom.Track = (function (f,args,reaction){\nthis.f = f;\nthis.args = args;\nthis.reaction = reaction;\nthis.cljs$lang$protocol_mask$partition0$ = 2153807872;\nthis.cljs$lang$protocol_mask$partition1$ = 0;\n});\n(reagent.ratom.Track.prototype.reagent$ratom$IReactiveAtom$ = cljs.core.PROTOCOL_SENTINEL);\n\n(reagent.ratom.Track.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nvar temp__5825__auto__ = self__.reaction;\nif((temp__5825__auto__ == null)){\nreturn reagent.ratom.cached_reaction((function (){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.f,self__.args);\n}),self__.f,self__.args,this$__$1,null);\n} else {\nvar r = temp__5825__auto__;\nreturn cljs.core._deref(r);\n}\n}));\n\n(reagent.ratom.Track.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){\nvar self__ = this;\nvar ___$1 = this;\nreturn (((other instanceof reagent.ratom.Track)) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.f,other.f)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.args,other.args)))));\n}));\n\n(reagent.ratom.Track.prototype.cljs$core$IHash$_hash$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn cljs.core.hash(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.f,self__.args], null));\n}));\n\n(reagent.ratom.Track.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\nvar self__ = this;\nvar a__$1 = this;\nreturn reagent.ratom.pr_atom(a__$1,w,opts,\"Track\",new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"val\",\"val\",128701612),a__$1.cljs$core$IDeref$_deref$arity$1(null),new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),self__.f], null));\n}));\n\n(reagent.ratom.Track.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"f\",\"f\",43394975,null),new cljs.core.Symbol(null,\"args\",\"args\",-1338879193,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"reaction\",\"reaction\",2131401315,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\n}));\n\n(reagent.ratom.Track.cljs$lang$type = true);\n\n(reagent.ratom.Track.cljs$lang$ctorStr = \"reagent.ratom/Track\");\n\n(reagent.ratom.Track.cljs$lang$ctorPrWriter = (function (this__5310__auto__,writer__5311__auto__,opt__5312__auto__){\nreturn cljs.core._write(writer__5311__auto__,\"reagent.ratom/Track\");\n}));\n\n/**\n * Positional factory function for reagent.ratom/Track.\n */\nreagent.ratom.__GT_Track = (function reagent$ratom$__GT_Track(f,args,reaction){\nreturn (new reagent.ratom.Track(f,args,reaction));\n});\n\nreagent.ratom.make_track = (function reagent$ratom$make_track(f,args){\nreturn (new reagent.ratom.Track(f,args,null));\n});\nreagent.ratom.make_track_BANG_ = (function reagent$ratom$make_track_BANG_(f,args){\nvar t = reagent.ratom.make_track(f,args);\nvar r = (function (){var G__8074 = (function (){\nreturn t.cljs$core$IDeref$_deref$arity$1(null);\n});\nvar G__8075 = new cljs.core.Keyword(null,\"auto-run\",\"auto-run\",1958400437);\nvar G__8076 = true;\nreturn (reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$3 ? reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$3(G__8074,G__8075,G__8076) : reagent.ratom.make_reaction.call(null,G__8074,G__8075,G__8076));\n})();\ncljs.core.deref(r);\n\nreturn r;\n});\nreagent.ratom.track = (function reagent$ratom$track(var_args){\nvar args__5755__auto__ = [];\nvar len__5749__auto___8495 = arguments.length;\nvar i__5750__auto___8496 = (0);\nwhile(true){\nif((i__5750__auto___8496 < len__5749__auto___8495)){\nargs__5755__auto__.push((arguments[i__5750__auto___8496]));\n\nvar G__8497 = (i__5750__auto___8496 + (1));\ni__5750__auto___8496 = G__8497;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5756__auto__ = ((((1) < args__5755__auto__.length))?(new cljs.core.IndexedSeq(args__5755__auto__.slice((1)),(0),null)):null);\nreturn reagent.ratom.track.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5756__auto__);\n});\n\n(reagent.ratom.track.cljs$core$IFn$_invoke$arity$variadic = (function (f,args){\nif(cljs.core.ifn_QMARK_(f)){\n} else {\nthrow (new Error(\"Assert failed: (ifn? f)\"));\n}\n\nreturn reagent.ratom.make_track(f,args);\n}));\n\n(reagent.ratom.track.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(reagent.ratom.track.cljs$lang$applyTo = (function (seq8080){\nvar G__8083 = cljs.core.first(seq8080);\nvar seq8080__$1 = cljs.core.next(seq8080);\nvar self__5734__auto__ = this;\nreturn self__5734__auto__.cljs$core$IFn$_invoke$arity$variadic(G__8083,seq8080__$1);\n}));\n\nreagent.ratom.track_BANG_ = (function reagent$ratom$track_BANG_(var_args){\nvar args__5755__auto__ = [];\nvar len__5749__auto___8498 = arguments.length;\nvar i__5750__auto___8499 = (0);\nwhile(true){\nif((i__5750__auto___8499 < len__5749__auto___8498)){\nargs__5755__auto__.push((arguments[i__5750__auto___8499]));\n\nvar G__8500 = (i__5750__auto___8499 + (1));\ni__5750__auto___8499 = G__8500;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5756__auto__ = ((((1) < args__5755__auto__.length))?(new cljs.core.IndexedSeq(args__5755__auto__.slice((1)),(0),null)):null);\nreturn reagent.ratom.track_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5756__auto__);\n});\n\n(reagent.ratom.track_BANG_.cljs$core$IFn$_invoke$arity$variadic = (function (f,args){\nif(cljs.core.ifn_QMARK_(f)){\n} else {\nthrow (new Error(\"Assert failed: (ifn? f)\"));\n}\n\nreturn reagent.ratom.make_track_BANG_(f,args);\n}));\n\n(reagent.ratom.track_BANG_.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(reagent.ratom.track_BANG_.cljs$lang$applyTo = (function (seq8094){\nvar G__8095 = cljs.core.first(seq8094);\nvar seq8094__$1 = cljs.core.next(seq8094);\nvar self__5734__auto__ = this;\nreturn self__5734__auto__.cljs$core$IFn$_invoke$arity$variadic(G__8095,seq8094__$1);\n}));\n\n\n/**\n* @constructor\n * @implements {cljs.core.IWatchable}\n * @implements {cljs.core.IAtom}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.IReset}\n * @implements {cljs.core.ISwap}\n * @implements {reagent.ratom.IReactiveAtom}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.IWithMeta}\n*/\nreagent.ratom.RCursor = (function (ratom,path,reaction,state,watches,meta){\nthis.ratom = ratom;\nthis.path = path;\nthis.reaction = reaction;\nthis.state = state;\nthis.watches = watches;\nthis.meta = meta;\nthis.cljs$lang$protocol_mask$partition0$ = 2154201088;\nthis.cljs$lang$protocol_mask$partition1$ = 114690;\n});\n(reagent.ratom.RCursor.prototype._peek = (function (){\nvar self__ = this;\nvar this$ = this;\nvar _STAR_ratom_context_STAR__orig_val__8109 = reagent.ratom._STAR_ratom_context_STAR_;\nvar _STAR_ratom_context_STAR__temp_val__8110 = null;\n(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__temp_val__8110);\n\ntry{return this$.cljs$core$IDeref$_deref$arity$1(null);\n}finally {(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__orig_val__8109);\n}}));\n\n(reagent.ratom.RCursor.prototype._set_state = (function (oldstate,newstate){\nvar self__ = this;\nvar this$ = this;\nif((oldstate === newstate)){\nreturn null;\n} else {\n(self__.state = newstate);\n\nif((!((self__.watches == null)))){\nreturn reagent.ratom.notify_w(this$,oldstate,newstate);\n} else {\nreturn null;\n}\n}\n}));\n\n(reagent.ratom.RCursor.prototype.reagent$ratom$IReactiveAtom$ = cljs.core.PROTOCOL_SENTINEL);\n\n(reagent.ratom.RCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\nvar self__ = this;\nvar a__$1 = this;\nreturn reagent.ratom.pr_atom(a__$1,w,opts,\"RCursor\",new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"val\",\"val\",128701612),a__$1.cljs$core$IDeref$_deref$arity$1(null),new cljs.core.Keyword(null,\"path\",\"path\",-188191168),self__.path], null));\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn self__.meta;\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$IHash$_hash$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn cljs.core.hash(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.ratom,self__.path], null));\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){\nvar self__ = this;\nvar ___$1 = this;\nreturn (((other instanceof reagent.ratom.RCursor)) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.path,other.path)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.ratom,other.ratom)))));\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = (function (this$,new_value){\nvar self__ = this;\nvar this$__$1 = this;\nvar oldstate = self__.state;\nthis$__$1._set_state(oldstate,new_value);\n\nif((((!((self__.ratom == null))))?(((((self__.ratom.cljs$lang$protocol_mask$partition0$ & (32768))) || ((cljs.core.PROTOCOL_SENTINEL === self__.ratom.cljs$core$IDeref$))))?true:(((!self__.ratom.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,self__.ratom):false)):cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,self__.ratom))){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.path,cljs.core.PersistentVector.EMPTY)){\ncljs.core.reset_BANG_(self__.ratom,new_value);\n} else {\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.ratom,cljs.core.assoc_in,self__.path,new_value);\n}\n} else {\n(self__.ratom.cljs$core$IFn$_invoke$arity$2 ? self__.ratom.cljs$core$IFn$_invoke$arity$2(self__.path,new_value) : self__.ratom.call(null,self__.path,new_value));\n}\n\nreturn new_value;\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = (function (a,f){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__8119 = a__$1._peek();\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8119) : f.call(null,G__8119));\n})());\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = (function (a,f,x){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__8124 = a__$1._peek();\nvar G__8125 = x;\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8124,G__8125) : f.call(null,G__8124,G__8125));\n})());\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = (function (a,f,x,y){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__8132 = a__$1._peek();\nvar G__8133 = x;\nvar G__8134 = y;\nreturn (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8132,G__8133,G__8134) : f.call(null,G__8132,G__8133,G__8134));\n})());\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = (function (a,f,x,y,more){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a__$1._peek(),x,y,more));\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,old,new$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.notify_w(this$__$1,old,new$);\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.add_w(this$__$1,key,f);\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.remove_w(this$__$1,key);\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){\nvar self__ = this;\nvar ___$1 = this;\nreturn (new reagent.ratom.RCursor(self__.ratom,self__.path,self__.reaction,self__.state,self__.watches,new_meta));\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nvar oldstate = self__.state;\nvar newstate = (function (){var temp__5825__auto__ = self__.reaction;\nif((temp__5825__auto__ == null)){\nvar f = (((((!((self__.ratom == null))))?(((((self__.ratom.cljs$lang$protocol_mask$partition0$ & (32768))) || ((cljs.core.PROTOCOL_SENTINEL === self__.ratom.cljs$core$IDeref$))))?true:(((!self__.ratom.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,self__.ratom):false)):cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,self__.ratom)))?(function (){\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(self__.ratom),self__.path);\n}):(function (){\nreturn (self__.ratom.cljs$core$IFn$_invoke$arity$1 ? self__.ratom.cljs$core$IFn$_invoke$arity$1(self__.path) : self__.ratom.call(null,self__.path));\n}));\nreturn reagent.ratom.cached_reaction(f,self__.ratom,self__.path,this$__$1,null);\n} else {\nvar r = temp__5825__auto__;\nreturn cljs.core._deref(r);\n}\n})();\nthis$__$1._set_state(oldstate,newstate);\n\nreturn newstate;\n}));\n\n(reagent.ratom.RCursor.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"ratom\",\"ratom\",1514010260,null),new cljs.core.Symbol(null,\"path\",\"path\",1452340359,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"reaction\",\"reaction\",2131401315,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"state\",\"state\",-348086572,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"watches\",\"watches\",1367433992,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),new cljs.core.Symbol(null,\"meta\",\"meta\",-1154898805,null)], null);\n}));\n\n(reagent.ratom.RCursor.cljs$lang$type = true);\n\n(reagent.ratom.RCursor.cljs$lang$ctorStr = \"reagent.ratom/RCursor\");\n\n(reagent.ratom.RCursor.cljs$lang$ctorPrWriter = (function (this__5310__auto__,writer__5311__auto__,opt__5312__auto__){\nreturn cljs.core._write(writer__5311__auto__,\"reagent.ratom/RCursor\");\n}));\n\n/**\n * Positional factory function for reagent.ratom/RCursor.\n */\nreagent.ratom.__GT_RCursor = (function reagent$ratom$__GT_RCursor(ratom,path,reaction,state,watches,meta){\nreturn (new reagent.ratom.RCursor(ratom,path,reaction,state,watches,meta));\n});\n\nreagent.ratom.cursor = (function reagent$ratom$cursor(src,path){\nif((function (){var or__5025__auto__ = (((!((src == null))))?((((false) || ((cljs.core.PROTOCOL_SENTINEL === src.reagent$ratom$IReactiveAtom$))))?true:(((!src.cljs$lang$protocol_mask$partition$))?cljs.core.native_satisfies_QMARK_(reagent.ratom.IReactiveAtom,src):false)):cljs.core.native_satisfies_QMARK_(reagent.ratom.IReactiveAtom,src));\nif(or__5025__auto__){\nreturn or__5025__auto__;\n} else {\nreturn ((cljs.core.ifn_QMARK_(src)) && ((!(cljs.core.vector_QMARK_(src)))));\n}\n})()){\n} else {\nthrow (new Error([\"Assert failed: \",[\"src must be a reactive atom or a function, not \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([src], 0)),\" while attempting to get path: \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([path], 0))].join(''),\"\\n\",\"(or (satisfies? IReactiveAtom src) (and (ifn? src) (not (vector? src))))\"].join('')));\n}\n\nreturn reagent.ratom.__GT_RCursor(src,path,null,null,null,null);\n});\nreagent.ratom.with_let_destroy = (function reagent$ratom$with_let_destroy(v){\nvar temp__5827__auto__ = v.destroy;\nif((temp__5827__auto__ == null)){\nreturn null;\n} else {\nvar f = temp__5827__auto__;\nreturn (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\n}\n});\nreagent.ratom.with_let_values = (function reagent$ratom$with_let_values(key){\nvar temp__5825__auto__ = reagent.ratom._STAR_ratom_context_STAR_;\nif((temp__5825__auto__ == null)){\nreturn [];\n} else {\nvar c = temp__5825__auto__;\nreturn reagent.ratom.cached_reaction((function (){\nreturn [];\n}),c,key,null,reagent.ratom.with_let_destroy);\n}\n});\n\n/**\n * @interface\n */\nreagent.ratom.IDisposable = function(){};\n\nvar reagent$ratom$IDisposable$dispose_BANG_$dyn_8513 = (function (this$){\nvar x__5373__auto__ = (((this$ == null))?null:this$);\nvar m__5374__auto__ = (reagent.ratom.dispose_BANG_[goog.typeOf(x__5373__auto__)]);\nif((!((m__5374__auto__ == null)))){\nreturn (m__5374__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5374__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__5374__auto__.call(null,this$));\n} else {\nvar m__5372__auto__ = (reagent.ratom.dispose_BANG_[\"_\"]);\nif((!((m__5372__auto__ == null)))){\nreturn (m__5372__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5372__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__5372__auto__.call(null,this$));\n} else {\nthrow cljs.core.missing_protocol(\"IDisposable.dispose!\",this$);\n}\n}\n});\nreagent.ratom.dispose_BANG_ = (function reagent$ratom$dispose_BANG_(this$){\nif((((!((this$ == null)))) && ((!((this$.reagent$ratom$IDisposable$dispose_BANG_$arity$1 == null)))))){\nreturn this$.reagent$ratom$IDisposable$dispose_BANG_$arity$1(this$);\n} else {\nreturn reagent$ratom$IDisposable$dispose_BANG_$dyn_8513(this$);\n}\n});\n\nvar reagent$ratom$IDisposable$add_on_dispose_BANG_$dyn_8516 = (function (this$,f){\nvar x__5373__auto__ = (((this$ == null))?null:this$);\nvar m__5374__auto__ = (reagent.ratom.add_on_dispose_BANG_[goog.typeOf(x__5373__auto__)]);\nif((!((m__5374__auto__ == null)))){\nreturn (m__5374__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5374__auto__.cljs$core$IFn$_invoke$arity$2(this$,f) : m__5374__auto__.call(null,this$,f));\n} else {\nvar m__5372__auto__ = (reagent.ratom.add_on_dispose_BANG_[\"_\"]);\nif((!((m__5372__auto__ == null)))){\nreturn (m__5372__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5372__auto__.cljs$core$IFn$_invoke$arity$2(this$,f) : m__5372__auto__.call(null,this$,f));\n} else {\nthrow cljs.core.missing_protocol(\"IDisposable.add-on-dispose!\",this$);\n}\n}\n});\nreagent.ratom.add_on_dispose_BANG_ = (function reagent$ratom$add_on_dispose_BANG_(this$,f){\nif((((!((this$ == null)))) && ((!((this$.reagent$ratom$IDisposable$add_on_dispose_BANG_$arity$2 == null)))))){\nreturn this$.reagent$ratom$IDisposable$add_on_dispose_BANG_$arity$2(this$,f);\n} else {\nreturn reagent$ratom$IDisposable$add_on_dispose_BANG_$dyn_8516(this$,f);\n}\n});\n\n\n/**\n * @interface\n */\nreagent.ratom.IRunnable = function(){};\n\nvar reagent$ratom$IRunnable$run$dyn_8520 = (function (this$){\nvar x__5373__auto__ = (((this$ == null))?null:this$);\nvar m__5374__auto__ = (reagent.ratom.run[goog.typeOf(x__5373__auto__)]);\nif((!((m__5374__auto__ == null)))){\nreturn (m__5374__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5374__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__5374__auto__.call(null,this$));\n} else {\nvar m__5372__auto__ = (reagent.ratom.run[\"_\"]);\nif((!((m__5372__auto__ == null)))){\nreturn (m__5372__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5372__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__5372__auto__.call(null,this$));\n} else {\nthrow cljs.core.missing_protocol(\"IRunnable.run\",this$);\n}\n}\n});\nreagent.ratom.run = (function reagent$ratom$run(this$){\nif((((!((this$ == null)))) && ((!((this$.reagent$ratom$IRunnable$run$arity$1 == null)))))){\nreturn this$.reagent$ratom$IRunnable$run$arity$1(this$);\n} else {\nreturn reagent$ratom$IRunnable$run$dyn_8520(this$);\n}\n});\n\nreagent.ratom.handle_reaction_change = (function reagent$ratom$handle_reaction_change(this$,sender,old,new$){\nreturn this$._handle_change(sender,old,new$);\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IWatchable}\n * @implements {cljs.core.IAtom}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.IReset}\n * @implements {cljs.core.ISwap}\n * @implements {reagent.ratom.IReactiveAtom}\n * @implements {reagent.ratom.IRunnable}\n * @implements {reagent.ratom.IDisposable}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IPrintWithWriter}\n*/\nreagent.ratom.Reaction = (function (f,state,dirty_QMARK_,nocache_QMARK_,watching,watches,auto_run,caught){\nthis.f = f;\nthis.state = state;\nthis.dirty_QMARK_ = dirty_QMARK_;\nthis.nocache_QMARK_ = nocache_QMARK_;\nthis.watching = watching;\nthis.watches = watches;\nthis.auto_run = auto_run;\nthis.caught = caught;\nthis.cljs$lang$protocol_mask$partition0$ = 2153807872;\nthis.cljs$lang$protocol_mask$partition1$ = 114690;\n});\n(reagent.ratom.Reaction.prototype._peek_at = (function (){\nvar self__ = this;\nvar this$ = this;\nvar _STAR_ratom_context_STAR__orig_val__8260 = reagent.ratom._STAR_ratom_context_STAR_;\nvar _STAR_ratom_context_STAR__temp_val__8261 = null;\n(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__temp_val__8261);\n\ntry{return this$.cljs$core$IDeref$_deref$arity$1(null);\n}finally {(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__orig_val__8260);\n}}));\n\n(reagent.ratom.Reaction.prototype._handle_change = (function (sender,oldval,newval){\nvar self__ = this;\nvar this$ = this;\nif((((oldval === newval)) || (self__.dirty_QMARK_))){\nreturn null;\n} else {\nif((self__.auto_run == null)){\n(self__.dirty_QMARK_ = true);\n\nreturn reagent.ratom.rea_enqueue(this$);\n} else {\nif(self__.auto_run === true){\nreturn this$._run(false);\n} else {\nreturn (self__.auto_run.cljs$core$IFn$_invoke$arity$1 ? self__.auto_run.cljs$core$IFn$_invoke$arity$1(this$) : self__.auto_run.call(null,this$));\n}\n}\n}\n}));\n\n(reagent.ratom.Reaction.prototype._update_watching = (function (derefed){\nvar self__ = this;\nvar this$ = this;\nvar new$ = cljs.core.set(derefed);\nvar old = cljs.core.set(self__.watching);\n(self__.watching = derefed);\n\nvar seq__8278_8523 = cljs.core.seq(clojure.set.difference.cljs$core$IFn$_invoke$arity$2(new$,old));\nvar chunk__8279_8524 = null;\nvar count__8280_8525 = (0);\nvar i__8281_8526 = (0);\nwhile(true){\nif((i__8281_8526 < count__8280_8525)){\nvar w_8527 = chunk__8279_8524.cljs$core$IIndexed$_nth$arity$2(null,i__8281_8526);\ncljs.core._add_watch(w_8527,this$,reagent.ratom.handle_reaction_change);\n\n\nvar G__8528 = seq__8278_8523;\nvar G__8529 = chunk__8279_8524;\nvar G__8530 = count__8280_8525;\nvar G__8531 = (i__8281_8526 + (1));\nseq__8278_8523 = G__8528;\nchunk__8279_8524 = G__8529;\ncount__8280_8525 = G__8530;\ni__8281_8526 = G__8531;\ncontinue;\n} else {\nvar temp__5823__auto___8532 = cljs.core.seq(seq__8278_8523);\nif(temp__5823__auto___8532){\nvar seq__8278_8534__$1 = temp__5823__auto___8532;\nif(cljs.core.chunked_seq_QMARK_(seq__8278_8534__$1)){\nvar c__5548__auto___8535 = cljs.core.chunk_first(seq__8278_8534__$1);\nvar G__8536 = cljs.core.chunk_rest(seq__8278_8534__$1);\nvar G__8537 = c__5548__auto___8535;\nvar G__8538 = cljs.core.count(c__5548__auto___8535);\nvar G__8539 = (0);\nseq__8278_8523 = G__8536;\nchunk__8279_8524 = G__8537;\ncount__8280_8525 = G__8538;\ni__8281_8526 = G__8539;\ncontinue;\n} else {\nvar w_8541 = cljs.core.first(seq__8278_8534__$1);\ncljs.core._add_watch(w_8541,this$,reagent.ratom.handle_reaction_change);\n\n\nvar G__8542 = cljs.core.next(seq__8278_8534__$1);\nvar G__8543 = null;\nvar G__8544 = (0);\nvar G__8545 = (0);\nseq__8278_8523 = G__8542;\nchunk__8279_8524 = G__8543;\ncount__8280_8525 = G__8544;\ni__8281_8526 = G__8545;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nvar seq__8315 = cljs.core.seq(clojure.set.difference.cljs$core$IFn$_invoke$arity$2(old,new$));\nvar chunk__8316 = null;\nvar count__8317 = (0);\nvar i__8318 = (0);\nwhile(true){\nif((i__8318 < count__8317)){\nvar w = chunk__8316.cljs$core$IIndexed$_nth$arity$2(null,i__8318);\ncljs.core._remove_watch(w,this$);\n\n\nvar G__8546 = seq__8315;\nvar G__8547 = chunk__8316;\nvar G__8548 = count__8317;\nvar G__8549 = (i__8318 + (1));\nseq__8315 = G__8546;\nchunk__8316 = G__8547;\ncount__8317 = G__8548;\ni__8318 = G__8549;\ncontinue;\n} else {\nvar temp__5823__auto__ = cljs.core.seq(seq__8315);\nif(temp__5823__auto__){\nvar seq__8315__$1 = temp__5823__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__8315__$1)){\nvar c__5548__auto__ = cljs.core.chunk_first(seq__8315__$1);\nvar G__8552 = cljs.core.chunk_rest(seq__8315__$1);\nvar G__8553 = c__5548__auto__;\nvar G__8554 = cljs.core.count(c__5548__auto__);\nvar G__8555 = (0);\nseq__8315 = G__8552;\nchunk__8316 = G__8553;\ncount__8317 = G__8554;\ni__8318 = G__8555;\ncontinue;\n} else {\nvar w = cljs.core.first(seq__8315__$1);\ncljs.core._remove_watch(w,this$);\n\n\nvar G__8556 = cljs.core.next(seq__8315__$1);\nvar G__8557 = null;\nvar G__8558 = (0);\nvar G__8559 = (0);\nseq__8315 = G__8556;\nchunk__8316 = G__8557;\ncount__8317 = G__8558;\ni__8318 = G__8559;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}));\n\n(reagent.ratom.Reaction.prototype._queued_run = (function (){\nvar self__ = this;\nvar this$ = this;\nif(((self__.dirty_QMARK_) && ((!((self__.watching == null)))))){\nreturn this$._run(true);\n} else {\nreturn null;\n}\n}));\n\n(reagent.ratom.Reaction.prototype._try_capture = (function (f__$1){\nvar self__ = this;\nvar this$ = this;\ntry{(self__.caught = null);\n\nreturn reagent.ratom.deref_capture(f__$1,this$);\n}catch (e8329){var e = e8329;\n(self__.state = e);\n\n(self__.caught = e);\n\nreturn (self__.dirty_QMARK_ = false);\n}}));\n\n(reagent.ratom.Reaction.prototype._run = (function (check){\nvar self__ = this;\nvar this$ = this;\nvar oldstate = self__.state;\nvar res = (cljs.core.truth_(check)?this$._try_capture(self__.f):reagent.ratom.deref_capture(self__.f,this$));\nif(self__.nocache_QMARK_){\n} else {\n(self__.state = res);\n\nif((((self__.watches == null)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(oldstate,res)))){\n} else {\nreagent.ratom.notify_w(this$,oldstate,res);\n}\n}\n\nreturn res;\n}));\n\n(reagent.ratom.Reaction.prototype._set_opts = (function (p__8330){\nvar self__ = this;\nvar map__8332 = p__8330;\nvar map__8332__$1 = cljs.core.__destructure_map(map__8332);\nvar auto_run__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__8332__$1,new cljs.core.Keyword(null,\"auto-run\",\"auto-run\",1958400437));\nvar on_set = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__8332__$1,new cljs.core.Keyword(null,\"on-set\",\"on-set\",-140953470));\nvar on_dispose = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__8332__$1,new cljs.core.Keyword(null,\"on-dispose\",\"on-dispose\",2105306360));\nvar no_cache = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__8332__$1,new cljs.core.Keyword(null,\"no-cache\",\"no-cache\",1588056370));\nvar this$ = this;\nif((!((auto_run__$1 == null)))){\n(this$.auto_run = auto_run__$1);\n} else {\n}\n\nif((!((on_set == null)))){\n(this$.on_set = on_set);\n} else {\n}\n\nif((!((on_dispose == null)))){\n(this$.on_dispose = on_dispose);\n} else {\n}\n\nif((!((no_cache == null)))){\nreturn (this$.nocache_QMARK_ = no_cache);\n} else {\nreturn null;\n}\n}));\n\n(reagent.ratom.Reaction.prototype.reagent$ratom$IReactiveAtom$ = cljs.core.PROTOCOL_SENTINEL);\n\n(reagent.ratom.Reaction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\nvar self__ = this;\nvar a__$1 = this;\nreturn reagent.ratom.pr_atom(a__$1,w,opts,\"Reaction\",new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"val\",\"val\",128701612),a__$1.cljs$core$IDeref$_deref$arity$1(null)], null));\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn goog.getUid(this$__$1);\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){\nvar self__ = this;\nvar o__$1 = this;\nreturn (o__$1 === other);\n}));\n\n(reagent.ratom.Reaction.prototype.reagent$ratom$IDisposable$ = cljs.core.PROTOCOL_SENTINEL);\n\n(reagent.ratom.Reaction.prototype.reagent$ratom$IDisposable$dispose_BANG_$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nvar s = self__.state;\nvar wg = self__.watching;\n(self__.watching = null);\n\n(self__.state = null);\n\n(self__.auto_run = null);\n\n(self__.dirty_QMARK_ = true);\n\nvar seq__8336_8564 = cljs.core.seq(cljs.core.set(wg));\nvar chunk__8337_8565 = null;\nvar count__8338_8566 = (0);\nvar i__8339_8567 = (0);\nwhile(true){\nif((i__8339_8567 < count__8338_8566)){\nvar w_8568 = chunk__8337_8565.cljs$core$IIndexed$_nth$arity$2(null,i__8339_8567);\ncljs.core._remove_watch(w_8568,this$__$1);\n\n\nvar G__8569 = seq__8336_8564;\nvar G__8570 = chunk__8337_8565;\nvar G__8571 = count__8338_8566;\nvar G__8572 = (i__8339_8567 + (1));\nseq__8336_8564 = G__8569;\nchunk__8337_8565 = G__8570;\ncount__8338_8566 = G__8571;\ni__8339_8567 = G__8572;\ncontinue;\n} else {\nvar temp__5823__auto___8573 = cljs.core.seq(seq__8336_8564);\nif(temp__5823__auto___8573){\nvar seq__8336_8574__$1 = temp__5823__auto___8573;\nif(cljs.core.chunked_seq_QMARK_(seq__8336_8574__$1)){\nvar c__5548__auto___8575 = cljs.core.chunk_first(seq__8336_8574__$1);\nvar G__8576 = cljs.core.chunk_rest(seq__8336_8574__$1);\nvar G__8577 = c__5548__auto___8575;\nvar G__8578 = cljs.core.count(c__5548__auto___8575);\nvar G__8579 = (0);\nseq__8336_8564 = G__8576;\nchunk__8337_8565 = G__8577;\ncount__8338_8566 = G__8578;\ni__8339_8567 = G__8579;\ncontinue;\n} else {\nvar w_8580 = cljs.core.first(seq__8336_8574__$1);\ncljs.core._remove_watch(w_8580,this$__$1);\n\n\nvar G__8581 = cljs.core.next(seq__8336_8574__$1);\nvar G__8582 = null;\nvar G__8583 = (0);\nvar G__8584 = (0);\nseq__8336_8564 = G__8581;\nchunk__8337_8565 = G__8582;\ncount__8338_8566 = G__8583;\ni__8339_8567 = G__8584;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nif((!((this$__$1.on_dispose == null)))){\nthis$__$1.on_dispose(s);\n} else {\n}\n\nvar temp__5827__auto__ = this$__$1.on_dispose_arr;\nif((temp__5827__auto__ == null)){\nreturn null;\n} else {\nvar a = temp__5827__auto__;\nvar n__5616__auto__ = a.length;\nvar i = (0);\nwhile(true){\nif((i < n__5616__auto__)){\nvar fexpr__8344_8586 = (a[i]);\n(fexpr__8344_8586.cljs$core$IFn$_invoke$arity$1 ? fexpr__8344_8586.cljs$core$IFn$_invoke$arity$1(this$__$1) : fexpr__8344_8586.call(null,this$__$1));\n\nvar G__8587 = (i + (1));\ni = G__8587;\ncontinue;\n} else {\nreturn null;\n}\nbreak;\n}\n}\n}));\n\n(reagent.ratom.Reaction.prototype.reagent$ratom$IDisposable$add_on_dispose_BANG_$arity$2 = (function (this$,f__$1){\nvar self__ = this;\nvar this$__$1 = this;\nvar temp__5825__auto__ = this$__$1.on_dispose_arr;\nif((temp__5825__auto__ == null)){\nreturn (this$__$1.on_dispose_arr = [f__$1]);\n} else {\nvar a = temp__5825__auto__;\nreturn a.push(f__$1);\n}\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = (function (a,newval){\nvar self__ = this;\nvar a__$1 = this;\nif(cljs.core.fn_QMARK_(a__$1.on_set)){\n} else {\nthrow (new Error([\"Assert failed: \",\"Reaction is read only; on-set is not allowed\",\"\\n\",\"(fn? (.-on-set a))\"].join('')));\n}\n\nvar oldval = self__.state;\n(self__.state = newval);\n\na__$1.on_set(oldval,newval);\n\nreagent.ratom.notify_w(a__$1,oldval,newval);\n\nreturn newval;\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = (function (a,f__$1){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__8356 = a__$1._peek_at();\nreturn (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__8356) : f__$1.call(null,G__8356));\n})());\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = (function (a,f__$1,x){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__8363 = a__$1._peek_at();\nvar G__8364 = x;\nreturn (f__$1.cljs$core$IFn$_invoke$arity$2 ? f__$1.cljs$core$IFn$_invoke$arity$2(G__8363,G__8364) : f__$1.call(null,G__8363,G__8364));\n})());\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = (function (a,f__$1,x,y){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__8371 = a__$1._peek_at();\nvar G__8372 = x;\nvar G__8373 = y;\nreturn (f__$1.cljs$core$IFn$_invoke$arity$3 ? f__$1.cljs$core$IFn$_invoke$arity$3(G__8371,G__8372,G__8373) : f__$1.call(null,G__8371,G__8372,G__8373));\n})());\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = (function (a,f__$1,x,y,more){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f__$1,a__$1._peek_at(),x,y,more));\n}));\n\n(reagent.ratom.Reaction.prototype.reagent$ratom$IRunnable$ = cljs.core.PROTOCOL_SENTINEL);\n\n(reagent.ratom.Reaction.prototype.reagent$ratom$IRunnable$run$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\n(reagent.ratom.flush_BANG_.cljs$core$IFn$_invoke$arity$0 ? reagent.ratom.flush_BANG_.cljs$core$IFn$_invoke$arity$0() : reagent.ratom.flush_BANG_.call(null));\n\nreturn this$__$1._run(false);\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,old,new$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.notify_w(this$__$1,old,new$);\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f__$1){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.add_w(this$__$1,key,f__$1);\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){\nvar self__ = this;\nvar this$__$1 = this;\nvar was_empty = cljs.core.empty_QMARK_(self__.watches);\nreagent.ratom.remove_w(this$__$1,key);\n\nif((((!(was_empty))) && (((cljs.core.empty_QMARK_(self__.watches)) && ((self__.auto_run == null)))))){\nreturn this$__$1.reagent$ratom$IDisposable$dispose_BANG_$arity$1(null);\n} else {\nreturn null;\n}\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nvar temp__5827__auto___8591 = self__.caught;\nif((temp__5827__auto___8591 == null)){\n} else {\nvar e_8592 = temp__5827__auto___8591;\nthrow e_8592;\n}\n\nvar non_reactive_8595 = (reagent.ratom._STAR_ratom_context_STAR_ == null);\nif(non_reactive_8595){\n(reagent.ratom.flush_BANG_.cljs$core$IFn$_invoke$arity$0 ? reagent.ratom.flush_BANG_.cljs$core$IFn$_invoke$arity$0() : reagent.ratom.flush_BANG_.call(null));\n} else {\n}\n\nif(((non_reactive_8595) && ((self__.auto_run == null)))){\nif(self__.dirty_QMARK_){\nvar oldstate_8596 = self__.state;\n(self__.state = (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null)));\n\nif((((self__.watches == null)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(oldstate_8596,self__.state)))){\n} else {\nreagent.ratom.notify_w(this$__$1,oldstate_8596,self__.state);\n}\n} else {\n}\n} else {\nreagent.ratom.notify_deref_watcher_BANG_(this$__$1);\n\nif(self__.dirty_QMARK_){\nthis$__$1._run(false);\n} else {\n}\n}\n\nreturn self__.state;\n}));\n\n(reagent.ratom.Reaction.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"f\",\"f\",43394975,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"state\",\"state\",-348086572,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"dirty?\",\"dirty?\",-419314319,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null),new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"nocache?\",\"nocache?\",-1065670978,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null)], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"watching\",\"watching\",1947648227,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"watches\",\"watches\",1367433992,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"auto-run\",\"auto-run\",-696035332,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"caught\",\"caught\",2084008322,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\n}));\n\n(reagent.ratom.Reaction.cljs$lang$type = true);\n\n(reagent.ratom.Reaction.cljs$lang$ctorStr = \"reagent.ratom/Reaction\");\n\n(reagent.ratom.Reaction.cljs$lang$ctorPrWriter = (function (this__5310__auto__,writer__5311__auto__,opt__5312__auto__){\nreturn cljs.core._write(writer__5311__auto__,\"reagent.ratom/Reaction\");\n}));\n\n/**\n * Positional factory function for reagent.ratom/Reaction.\n */\nreagent.ratom.__GT_Reaction = (function reagent$ratom$__GT_Reaction(f,state,dirty_QMARK_,nocache_QMARK_,watching,watches,auto_run,caught){\nreturn (new reagent.ratom.Reaction(f,state,dirty_QMARK_,nocache_QMARK_,watching,watches,auto_run,caught));\n});\n\nreagent.ratom.flush_BANG_ = (function reagent$ratom$flush_BANG_(){\nwhile(true){\nvar q = reagent.ratom.rea_queue;\nif((q == null)){\nreturn null;\n} else {\n(reagent.ratom.rea_queue = null);\n\nvar n__5616__auto___8598 = q.length;\nvar i_8599 = (0);\nwhile(true){\nif((i_8599 < n__5616__auto___8598)){\nvar r_8600 = (q[i_8599]);\nr_8600._queued_run();\n\nvar G__8601 = (i_8599 + (1));\ni_8599 = G__8601;\ncontinue;\n} else {\n}\nbreak;\n}\n\ncontinue;\n}\nbreak;\n}\n});\n(reagent.impl.batching.ratom_flush = reagent.ratom.flush_BANG_);\n/**\n * Creates a Reaction from a function.\n * \n *   - :auto-run - starts running the reaction immediately, and runs again when\n *   atoms deferenced in the function change.\n *   - :on-set - runs when reaction value is updated, before notifying watchers.\n *   - :on-dispose - runs when the reaction is disposed.\n */\nreagent.ratom.make_reaction = (function reagent$ratom$make_reaction(var_args){\nvar args__5755__auto__ = [];\nvar len__5749__auto___8603 = arguments.length;\nvar i__5750__auto___8604 = (0);\nwhile(true){\nif((i__5750__auto___8604 < len__5749__auto___8603)){\nargs__5755__auto__.push((arguments[i__5750__auto___8604]));\n\nvar G__8605 = (i__5750__auto___8604 + (1));\ni__5750__auto___8604 = G__8605;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5756__auto__ = ((((1) < args__5755__auto__.length))?(new cljs.core.IndexedSeq(args__5755__auto__.slice((1)),(0),null)):null);\nreturn reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5756__auto__);\n});\n\n(reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$variadic = (function (f,p__8422){\nvar map__8423 = p__8422;\nvar map__8423__$1 = cljs.core.__destructure_map(map__8423);\nvar auto_run = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__8423__$1,new cljs.core.Keyword(null,\"auto-run\",\"auto-run\",1958400437));\nvar on_set = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__8423__$1,new cljs.core.Keyword(null,\"on-set\",\"on-set\",-140953470));\nvar on_dispose = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__8423__$1,new cljs.core.Keyword(null,\"on-dispose\",\"on-dispose\",2105306360));\nvar reaction = reagent.ratom.__GT_Reaction(f,null,true,false,null,null,null,null);\nreaction._set_opts(new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"auto-run\",\"auto-run\",1958400437),auto_run,new cljs.core.Keyword(null,\"on-set\",\"on-set\",-140953470),on_set,new cljs.core.Keyword(null,\"on-dispose\",\"on-dispose\",2105306360),on_dispose], null));\n\nreturn reaction;\n}));\n\n(reagent.ratom.make_reaction.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(reagent.ratom.make_reaction.cljs$lang$applyTo = (function (seq8420){\nvar G__8421 = cljs.core.first(seq8420);\nvar seq8420__$1 = cljs.core.next(seq8420);\nvar self__5734__auto__ = this;\nreturn self__5734__auto__.cljs$core$IFn$_invoke$arity$variadic(G__8421,seq8420__$1);\n}));\n\nreagent.ratom.temp_reaction = reagent.ratom.make_reaction(null);\n/**\n * Evaluates `f` and returns the result.  If `f` calls `deref` on any ratoms,\n * creates a new Reaction that watches those atoms and calls `run` whenever\n * any of those watched ratoms change.  Also, the new reaction is added to\n * list of 'watches' of each of the ratoms. The `run` parameter is a function\n * that should expect one argument.  It is passed `obj` when run.  The `opts`\n * are any options accepted by a Reaction and will be set on the newly created\n * Reaction. Sets the newly created Reaction to the `key` on `obj`.\n */\nreagent.ratom.run_in_reaction = (function reagent$ratom$run_in_reaction(f,obj,key,run,opts){\nvar r = reagent.ratom.temp_reaction;\nvar res = reagent.ratom.deref_capture(f,r);\nif((r.watching == null)){\n} else {\n(reagent.ratom.temp_reaction = reagent.ratom.make_reaction(null));\n\nr._set_opts(opts);\n\n(r.f = f);\n\n(r.auto_run = (function (){\nreturn (run.cljs$core$IFn$_invoke$arity$1 ? run.cljs$core$IFn$_invoke$arity$1(obj) : run.call(null,obj));\n}));\n\nreagent.ratom.goog$module$goog$object.set(obj,key,r);\n}\n\nreturn res;\n});\nreagent.ratom.check_derefs = (function reagent$ratom$check_derefs(f){\nvar ctx = ({});\nvar res = reagent.ratom.in_context(ctx,f);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [res,(!((ctx.captured == null)))], null);\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IWatchable}\n * @implements {cljs.core.IAtom}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IReset}\n * @implements {cljs.core.ISwap}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IPrintWithWriter}\n*/\nreagent.ratom.Wrapper = (function (state,callback,changed,watches){\nthis.state = state;\nthis.callback = callback;\nthis.changed = changed;\nthis.watches = watches;\nthis.cljs$lang$protocol_mask$partition1$ = 114690;\nthis.cljs$lang$protocol_mask$partition0$ = 2149613568;\n});\n(reagent.ratom.Wrapper.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nif(((self__.changed) && ((!((reagent.ratom._STAR_ratom_context_STAR_ == null)))))){\nif(reagent.debug.has_console){\n((reagent.debug.tracking)?reagent.debug.track_console:console).warn([\"Warning: \",\"derefing stale wrap: \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([this$__$1], 0))].join(''));\n} else {\n}\n} else {\n}\n\n\nreturn self__.state;\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = (function (this$,newval){\nvar self__ = this;\nvar this$__$1 = this;\nvar oldval = self__.state;\n(self__.changed = true);\n\n(self__.state = newval);\n\nif((!((self__.watches == null)))){\nreagent.ratom.notify_w(this$__$1,oldval,newval);\n} else {\n}\n\n(self__.callback.cljs$core$IFn$_invoke$arity$1 ? self__.callback.cljs$core$IFn$_invoke$arity$1(newval) : self__.callback.call(null,newval));\n\nreturn newval;\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = (function (a,f){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(self__.state) : f.call(null,self__.state)));\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = (function (a,f,x){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(self__.state,x) : f.call(null,self__.state,x)));\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = (function (a,f,x,y){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(self__.state,x,y) : f.call(null,self__.state,x,y)));\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = (function (a,f,x,y,more){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,self__.state,x,y,more));\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){\nvar self__ = this;\nvar this$__$1 = this;\nreturn (((other instanceof reagent.ratom.Wrapper)) && ((((!(self__.changed))) && (((cljs.core.not(other.changed)) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.state,other.state)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.callback,other.callback)))))))));\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,old,new$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.notify_w(this$__$1,old,new$);\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.add_w(this$__$1,key,f);\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.remove_w(this$__$1,key);\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\nvar self__ = this;\nvar a__$1 = this;\nreturn reagent.ratom.pr_atom(a__$1,w,opts,\"Wrapper\",new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"val\",\"val\",128701612),a__$1.cljs$core$IDeref$_deref$arity$1(null)], null));\n}));\n\n(reagent.ratom.Wrapper.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\"state\",\"state\",-348086572,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),new cljs.core.Symbol(null,\"callback\",\"callback\",935395299,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"changed\",\"changed\",-2083710852,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null),new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"watches\",\"watches\",1367433992,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\n}));\n\n(reagent.ratom.Wrapper.cljs$lang$type = true);\n\n(reagent.ratom.Wrapper.cljs$lang$ctorStr = \"reagent.ratom/Wrapper\");\n\n(reagent.ratom.Wrapper.cljs$lang$ctorPrWriter = (function (this__5310__auto__,writer__5311__auto__,opt__5312__auto__){\nreturn cljs.core._write(writer__5311__auto__,\"reagent.ratom/Wrapper\");\n}));\n\n/**\n * Positional factory function for reagent.ratom/Wrapper.\n */\nreagent.ratom.__GT_Wrapper = (function reagent$ratom$__GT_Wrapper(state,callback,changed,watches){\nreturn (new reagent.ratom.Wrapper(state,callback,changed,watches));\n});\n\nreagent.ratom.make_wrapper = (function reagent$ratom$make_wrapper(value,callback_fn,args){\nreturn reagent.ratom.__GT_Wrapper(value,reagent.impl.util.make_partial_fn(callback_fn,args),false,null);\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","reagent/ratom.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",18],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index"],"~:use-macros",["^ ","~$warn","~$reagent.debug","~$dev?","^B"],"~:excludes",["~#set",["~$atom"]],"~:macros",["^ ","~$with-let",["^ ","~:arglists",["~#list",[["~$bindings","~$&","~$body"]]],"^7",26,"^8",1,"^6","reagent/ratom.clj","~:name","~$reagent.ratom/with-let","~:ns","~$reagent.ratom","~:macro",true],"~$reaction",["^ ","^I",["^J",[["~$&","^L"]]],"~:doc","Prefer using reagent.core/reaction.","^7",8,"^8",1,"^6","reagent/ratom.clj","^M","~$reagent.ratom/reaction","^O","^P","^Q",true],"~$run!",["^ ","^I",["^J",[["~$&","^L"]]],"^S","Creates a Reaction from the body, and runs the body immediately\n  and again whenever atoms deferenced in the body\n  change. Body should side effect.\n\n  Use dispose! to stop running the Reaction.","^7",14,"^8",1,"^6","reagent/ratom.clj","^M","~$reagent.ratom/run!","^O","^P","^Q",true]],"^M","^P","~:reader-aliases",["^ "],"~:op","^O","~:imports",null,"~:requires",["^ ","~$reagent.impl.util","^[","~$obj","~$goog.object","~$cljs.core","^12","~$goog","^13","^11","^11","~$reagent.impl.batching","^14","~$clojure.set","^15","~$util","^[","~$s","^15","~$batch","^14","^B","^B"],"~:seen",["^E",["~:require","~:require-macros"]],"~:uses",null,"^1:",["^ ","^P","^P","^B","^B","^12","^12"],"~:form",["^J",["~$ns","^P",["^J",["~:refer-clojure","~:exclude",["^F"]]],["^J",["^1:",["^P"]]],["^J",["^19",["^[","~:as","^16"],["^B","~:refer-macros",["^A","^C"]],["^14","^1@","^17"],["^15","^1@","~$s"],["^11","^1@","^10"]]]]],"~:flags",["^ ","^1:",["^E",[]],"^19",["^E",[]]],"~:js-deps",[],"~:deps",["^13","^12","^[","^B","^14","^15","^11"]],"^O","^P","~:resource-id",["~:shadow.build.classpath/resource","reagent/ratom.cljs"],"~:compiled-at",1755972604590,"^W",["^ ","^[","^[","^10","^11","^P","^P","^12","^12","^13","^13","^11","^11","^14","^14","^15","^15","^16","^[","~$s","^15","^17","^14","^B","^B"],"~:resource-name","reagent/ratom.cljs","~:warnings",[],"~:source","(ns reagent.ratom\n  (:refer-clojure :exclude [atom])\n  (:require-macros [reagent.ratom])\n  (:require [reagent.impl.util :as util]\n            [reagent.debug :refer-macros [warn dev?]]\n            [reagent.impl.batching :as batch]\n            [clojure.set :as s]\n            [goog.object :as obj]))\n\n(declare flush!)\n\n(declare ^:dynamic *ratom-context*)\n(defonce ^boolean debug false)\n(defonce ^:private generation 0)\n(defonce ^:private -running (clojure.core/atom 0))\n\n(defn ^boolean reactive? []\n  (some? *ratom-context*))\n\n\n;;; Utilities\n\n(defn running []\n  (+ @-running))\n\n(defn- ^number arr-len [x]\n  (if (nil? x) 0 (alength x)))\n\n(defn- ^boolean arr-eq [x y]\n  (let [len (arr-len x)]\n    (and (== len (arr-len y))\n         (loop [i 0]\n           (or (== i len)\n               (if (identical? (aget x i) (aget y i))\n                 (recur (inc i))\n                 false))))))\n\n(defn- in-context\n  \"When f is executed, if (f) derefs any ratoms, they are then added to 'obj.captured'(*ratom-context*).\n\n  See function notify-deref-watcher! to know how *ratom-context* is updated\"\n  [obj f]\n  (binding [*ratom-context* obj]\n    (f)))\n\n(defn- deref-capture\n  \"Returns `(in-context r f)`.  Calls `_update-watching` on r with any\n  `deref`ed atoms captured during `in-context`, if any differ from the\n  `watching` field of r.  Clears the `dirty?` flag on r.\n\n  Inside '_update-watching' along with adding the ratoms in 'r.watching' of reaction,\n  the reaction is also added to the list of watches on each ratoms f derefs.\"\n  [f ^clj r]\n  (set! (.-captured r) nil)\n  (when (dev?)\n    (set! (.-ratomGeneration r) (set! generation (inc generation))))\n  (let [res (in-context r f)\n        c (.-captured r)]\n    (set! (.-dirty? r) false)\n    ;; Optimize common case where derefs occur in same order\n    (when-not (arr-eq c (.-watching r))\n      (._update-watching r c))\n    res))\n\n(defn- notify-deref-watcher!\n  \"Add `derefed` to the `captured` field of `*ratom-context*`.\n\n  See also `in-context`\"\n  [derefed]\n  (when-some [^clj r *ratom-context*]\n    (let [c (.-captured r)]\n      (if (nil? c)\n        (set! (.-captured r) (array derefed))\n        (.push c derefed)))))\n\n(defn- check-watches [old new]\n  (when debug\n    (swap! -running + (- (count new) (count old))))\n  new)\n\n(defn- add-w [^clj this key f]\n  (let [w (.-watches this)]\n    (set! (.-watches this) (check-watches w (assoc w key f)))\n    (set! (.-watchesArr this) nil)))\n\n(defn- remove-w [^clj this key]\n  (let [w (.-watches this)]\n    (set! (.-watches this) (check-watches w (dissoc w key)))\n    (set! (.-watchesArr this) nil)))\n\n(defn- notify-w [^clj this old new]\n  (let [w (.-watchesArr this)\n        a (if (nil? w)\n            ;; Copy watches to array for speed\n            (->> (.-watches this)\n                 (reduce-kv #(doto %1 (.push %2) (.push %3)) #js[])\n                 (set! (.-watchesArr this)))\n            w)\n        len (alength a)]\n    (loop [i 0]\n      (when (< i len)\n        (let [k (aget a i)\n              f (aget a (inc i))]\n          (f k this old new))\n        (recur (+ 2 i))))))\n\n(defn- pr-atom [a writer opts s v]\n  (-write writer (str \"#object[reagent.ratom.\" s \" \"))\n  (pr-writer (binding [*ratom-context* nil] v) writer opts)\n  (-write writer \"]\"))\n\n\n;;; Queueing\n\n(defonce ^:private rea-queue nil)\n\n(defn- rea-enqueue [r]\n  (when (nil? rea-queue)\n    (set! rea-queue #js [])\n    (batch/schedule))\n  (.push rea-queue r))\n\n;;; Atom\n\n(defprotocol IReactiveAtom)\n\n(deftype RAtom [^:mutable state meta validator ^:mutable watches]\n  IAtom\n  IReactiveAtom\n\n  IEquiv\n  (-equiv [o other] (identical? o other))\n\n  IDeref\n  (-deref [this]\n    (notify-deref-watcher! this)\n    state)\n\n  IReset\n  (-reset! [a new-value]\n    (when-not (nil? validator)\n      (assert (validator new-value) \"Validator rejected reference state\"))\n    (let [old-value state]\n      (set! state new-value)\n      (when-not (nil? watches)\n        (notify-w a old-value new-value))\n      new-value))\n\n  ISwap\n  (-swap! [a f]          (-reset! a (f state)))\n  (-swap! [a f x]        (-reset! a (f state x)))\n  (-swap! [a f x y]      (-reset! a (f state x y)))\n  (-swap! [a f x y more] (-reset! a (apply f state x y more)))\n\n  IWithMeta\n  (-with-meta [_ new-meta] (RAtom. state new-meta validator watches))\n\n  IMeta\n  (-meta [_] meta)\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts \"RAtom\" {:val (-deref a)}))\n\n  IWatchable\n  (-notify-watches [this old new] (notify-w this old new))\n  (-add-watch [this key f]        (add-w this key f))\n  (-remove-watch [this key]       (remove-w this key))\n\n  IHash\n  (-hash [this] (goog/getUid this)))\n\n(defn atom\n  \"Like clojure.core/atom, except that it keeps track of derefs.\"\n  ([x] (->RAtom x nil nil nil))\n  ([x & {:keys [meta validator]}] (->RAtom x meta validator nil)))\n\n\n;;; track\n\n(declare make-reaction)\n\n(defn- cached-reaction [f ^clj o k ^clj obj destroy]\n  (let [m (.-reagReactionCache o)\n        m (if (nil? m) {} m)\n        r (m k nil)]\n    (cond\n      (some? r) (-deref r)\n      (nil? *ratom-context*) (f)\n      :else (let [r (make-reaction\n                     f :on-dispose (fn [x]\n                                     (when debug (swap! -running dec))\n                                     (as-> (.-reagReactionCache o) _\n                                       (dissoc _ k)\n                                       (set! (.-reagReactionCache o) _))\n                                     (when (some? obj)\n                                       (set! (.-reaction obj) nil))\n                                     (when (some? destroy)\n                                       (destroy x))))\n                  v (-deref r)]\n              (set! (.-reagReactionCache o) (assoc m k r))\n              (when debug (swap! -running inc))\n              (when (some? obj)\n                (set! (.-reaction obj) r))\n              v))))\n\n(deftype Track [f args ^:mutable reaction]\n  IReactiveAtom\n\n  IDeref\n  (-deref [this]\n    (if-some [r reaction]\n      (-deref r)\n      (cached-reaction #(apply f args) f args this nil)))\n\n  IEquiv\n  (-equiv [_ ^clj other]\n    (and (instance? Track other)\n         (= f (.-f other))\n         (= args (.-args other))))\n\n  IHash\n  (-hash [_] (hash [f args]))\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts \"Track\" {:val (-deref a)\n                                                    :f f})))\n\n(defn make-track [f args]\n  (Track. f args nil))\n\n(defn make-track! [f args]\n  (let [t (make-track f args)\n        r (make-reaction #(-deref t)\n                         :auto-run true)]\n    @r\n    r))\n\n(defn track [f & args]\n  {:pre [(ifn? f)]}\n  (make-track f args))\n\n(defn track! [f & args]\n  {:pre [(ifn? f)]}\n  (make-track! f args))\n\n;;; cursor\n\n(deftype RCursor [ratom path ^:mutable reaction\n                  ^:mutable state ^:mutable watches meta]\n  IAtom\n  IReactiveAtom\n\n  IEquiv\n  (-equiv [_ ^clj other]\n    (and (instance? RCursor other)\n         (= path (.-path other))\n         (= ratom (.-ratom other))))\n\n  Object\n  (_peek [this]\n    (binding [*ratom-context* nil]\n      (-deref this)))\n\n  (_set-state [this oldstate newstate]\n    (when-not (identical? oldstate newstate)\n      (set! state newstate)\n      (when (some? watches)\n        (notify-w this oldstate newstate))))\n\n  IDeref\n  (-deref [this]\n    (let [oldstate state\n          newstate (if-some [r reaction]\n                     (-deref r)\n                     (let [f (if (satisfies? IDeref ratom)\n                               #(get-in @ratom path)\n                               #(ratom path))]\n                       (cached-reaction f ratom path this nil)))]\n      (._set-state this oldstate newstate)\n      newstate))\n\n  IReset\n  (-reset! [this new-value]\n    (let [oldstate state]\n      (._set-state this oldstate new-value)\n      (if (satisfies? IDeref ratom)\n        (if (= path [])\n          (reset! ratom new-value)\n          (swap! ratom assoc-in path new-value))\n        (ratom path new-value))\n      new-value))\n\n  ISwap\n  (-swap! [a f]          (-reset! a (f (._peek a))))\n  (-swap! [a f x]        (-reset! a (f (._peek a) x)))\n  (-swap! [a f x y]      (-reset! a (f (._peek a) x y)))\n  (-swap! [a f x y more] (-reset! a (apply f (._peek a) x y more)))\n\n  IWithMeta\n  (-with-meta [_ new-meta] (RCursor. ratom path reaction\n                                     state watches new-meta))\n\n  IMeta\n  (-meta [_] meta)\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts \"RCursor\" {:val (-deref a)\n                                                      :path path}))\n  IWatchable\n  (-notify-watches [this old new] (notify-w this old new))\n  (-add-watch [this key f]        (add-w this key f))\n  (-remove-watch [this key]       (remove-w this key))\n\n  IHash\n  (-hash [_] (hash [ratom path])))\n\n(defn cursor\n  [^clj src path]\n  (assert (or (satisfies? IReactiveAtom src)\n              (and (ifn? src)\n                   (not (vector? src))))\n          (str \"src must be a reactive atom or a function, not \"\n               (pr-str src)\n               \" while attempting to get path: \"\n               (pr-str path)))\n  (->RCursor src path nil nil nil nil))\n\n\n;;; with-let support\n\n(defn with-let-destroy [^Reaction v]\n  (when-some [f (.-destroy v)]\n    (f)))\n\n(defn with-let-values [key]\n  (if-some [c *ratom-context*]\n    (cached-reaction (fn [] #js []) c key nil with-let-destroy)\n    #js []))\n\n\n;;;; reaction\n\n(defprotocol IDisposable\n  (dispose! [this])\n  (add-on-dispose! [this f]))\n\n(defprotocol IRunnable\n  (run [this]))\n\n(defn- handle-reaction-change [^clj this sender old new]\n  (._handle-change this sender old new))\n\n;; Fields of a Reaction javascript object\n;; - auto_run\n;; - captured\n;; - caught\n;; - f\n;; - ratomGeneration\n;; - state\n;; - watches\n;; - watching\n(deftype Reaction [f ^:mutable state ^:mutable ^boolean dirty? ^boolean nocache?\n                   ^:mutable watching ^:mutable watches ^:mutable auto-run\n                   ^:mutable caught]\n  IAtom\n  IReactiveAtom\n\n  IWatchable\n  (-notify-watches [this old new] (notify-w this old new))\n  (-add-watch [this key f]        (add-w this key f))\n  (-remove-watch [this key]\n    (let [was-empty (empty? watches)]\n      (remove-w this key)\n      (when (and (not was-empty)\n                 (empty? watches)\n                 (nil? auto-run))\n        (dispose! this))))\n\n  IReset\n  (-reset! [a newval]\n    (assert (fn? (.-on-set a)) \"Reaction is read only; on-set is not allowed\")\n    (let [oldval state]\n      (set! state newval)\n      (.on-set a oldval newval)\n      (notify-w a oldval newval)\n      newval))\n\n  ISwap\n  (-swap! [a f]          (-reset! a (f (._peek-at a))))\n  (-swap! [a f x]        (-reset! a (f (._peek-at a) x)))\n  (-swap! [a f x y]      (-reset! a (f (._peek-at a) x y)))\n  (-swap! [a f x y more] (-reset! a (apply f (._peek-at a) x y more)))\n\n  Object\n  (_peek-at [this]\n    (binding [*ratom-context* nil]\n      (-deref this)))\n\n  (_handle-change [this sender oldval newval]\n    (when-not (or (identical? oldval newval)\n                  dirty?)\n      (if (nil? auto-run)\n        (do\n          (set! dirty? true)\n          (rea-enqueue this))\n        (if (true? auto-run)\n          (._run this false)\n          (auto-run this)))))\n\n  (_update-watching [this derefed]\n    (let [new (set derefed)\n          old (set watching)]\n      (set! watching derefed)\n      (doseq [w (s/difference new old)]\n        (-add-watch w this handle-reaction-change))\n      (doseq [w (s/difference old new)]\n        (-remove-watch w this))))\n\n  (_queued-run [this]\n    (when (and dirty? (some? watching))\n      (._run this true)))\n\n  (_try-capture [this f]\n    (try\n      (set! caught nil)\n      (deref-capture f this)\n      (catch :default e\n        (set! state e)\n        (set! caught e)\n        (set! dirty? false))))\n\n  (_run [this check]\n    (let [oldstate state\n          res (if check\n                (._try-capture this f)\n                (deref-capture f this))]\n      (when-not nocache?\n        (set! state res)\n        ;; Use = to determine equality from reactions, since\n        ;; they are likely to produce new data structures.\n        (when-not (or (nil? watches)\n                      (= oldstate res))\n          (notify-w this oldstate res)))\n      res))\n\n  (_set-opts [this {:keys [auto-run on-set on-dispose no-cache]}]\n    (when (some? auto-run)\n      (set! (.-auto-run this) auto-run))\n    (when (some? on-set)\n      (set! (.-on-set this) on-set))\n    (when (some? on-dispose)\n      (set! (.-on-dispose this) on-dispose))\n    (when (some? no-cache)\n      (set! (.-nocache? this) no-cache)))\n\n  IRunnable\n  (run [this]\n    (flush!)\n    (._run this false))\n\n  IDeref\n  (-deref [this]\n    (when-some [e caught]\n      (throw e))\n    (let [non-reactive (nil? *ratom-context*)]\n      (when non-reactive\n        (flush!))\n      (if (and non-reactive (nil? auto-run))\n        (when dirty?\n          (let [oldstate state]\n            (set! state (f))\n            (when-not (or (nil? watches) (= oldstate state))\n              (notify-w this oldstate state))))\n        (do\n          (notify-deref-watcher! this)\n          (when dirty?\n            (._run this false)))))\n    state)\n\n  IDisposable\n  (dispose! [this]\n    (let [s state\n          wg watching]\n      (set! watching nil)\n      (set! state nil)\n      (set! auto-run nil)\n      (set! dirty? true)\n      (doseq [w (set wg)]\n        (-remove-watch w this))\n      (when (some? (.-on-dispose this))\n        (.on-dispose this s))\n      (when-some [a (.-on-dispose-arr this)]\n        (dotimes [i (alength a)]\n          ((aget a i) this)))))\n\n  (add-on-dispose! [this f]\n    ;; f is called with the reaction as argument when it is no longer active\n    (if-some [a (.-on-dispose-arr this)]\n      (.push a f)\n      (set! (.-on-dispose-arr this) (array f))))\n\n  IEquiv\n  (-equiv [o other] (identical? o other))\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts \"Reaction\" {:val (-deref a)}))\n\n  IHash\n  (-hash [this] (goog/getUid this)))\n\n(defn flush! []\n  (loop []\n    (let [q rea-queue]\n      (when-not (nil? q)\n        (set! rea-queue nil)\n        (dotimes [i (alength q)]\n          (let [^Reaction r (aget q i)]\n            (._queued-run r)))\n        (recur)))))\n\n(set! batch/ratom-flush flush!)\n\n(defn make-reaction\n  \"Creates a Reaction from a function.\n\n  - :auto-run - starts running the reaction immediately, and runs again when\n  atoms deferenced in the function change.\n  - :on-set - runs when reaction value is updated, before notifying watchers.\n  - :on-dispose - runs when the reaction is disposed.\"\n  [f & {:keys [auto-run on-set on-dispose]}]\n  (let [reaction (->Reaction f nil true false nil nil nil nil)]\n    (._set-opts reaction {:auto-run auto-run\n                          :on-set on-set\n                          :on-dispose on-dispose})\n    reaction))\n\n\n\n(def ^:private temp-reaction (make-reaction nil))\n\n\n(defn run-in-reaction\n  \"Evaluates `f` and returns the result.  If `f` calls `deref` on any ratoms,\n   creates a new Reaction that watches those atoms and calls `run` whenever\n   any of those watched ratoms change.  Also, the new reaction is added to\n   list of 'watches' of each of the ratoms. The `run` parameter is a function\n   that should expect one argument.  It is passed `obj` when run.  The `opts`\n   are any options accepted by a Reaction and will be set on the newly created\n   Reaction. Sets the newly created Reaction to the `key` on `obj`.\"\n  [f obj key run opts]\n  (let [r temp-reaction\n        res (deref-capture f r)]\n    (when-not (nil? (.-watching r))\n      (set! temp-reaction (make-reaction nil))\n      (._set-opts r opts)\n      (set! (.-f r) f)\n      (set! (.-auto-run r) #(run obj))\n      (obj/set obj key r))\n    res))\n\n(defn check-derefs [f]\n  (let [ctx (js-obj)\n        res (in-context ctx f)]\n    [res (some? (.-captured ctx))]))\n\n\n;;; wrap\n\n(deftype Wrapper [^:mutable state callback ^:mutable ^boolean changed\n                  ^:mutable watches]\n\n  IAtom\n\n  IDeref\n  (-deref [this]\n    (when (dev?)\n      (when (and changed (some? *ratom-context*))\n        (warn \"derefing stale wrap: \"\n              (pr-str this))))\n    state)\n\n  IReset\n  (-reset! [this newval]\n    (let [oldval state]\n      (set! changed true)\n      (set! state newval)\n      (when (some? watches)\n        (notify-w this oldval newval))\n      (callback newval)\n      newval))\n\n  ISwap\n  (-swap! [a f]          (-reset! a (f state)))\n  (-swap! [a f x]        (-reset! a (f state x)))\n  (-swap! [a f x y]      (-reset! a (f state x y)))\n  (-swap! [a f x y more] (-reset! a (apply f state x y more)))\n\n  IEquiv\n  (-equiv [this ^clj other]\n    (and (instance? Wrapper other)\n         ;; If either of the wrappers have changed, equality\n         ;; cannot be relied on.\n         (not changed)\n         (not (.-changed other))\n         (= state (.-state other))\n         (= callback (.-callback other))))\n\n  IWatchable\n  (-notify-watches [this old new] (notify-w this old new))\n  (-add-watch [this key f]        (add-w this key f))\n  (-remove-watch [this key]       (remove-w this key))\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts \"Wrapper\" {:val (-deref a)})))\n\n(defn make-wrapper [value callback-fn args]\n  (->Wrapper value\n             (util/make-partial-fn callback-fn args)\n             false nil))\n\n\n\n\n#_(do\n  (defn ratom-perf []\n    (set! debug false)\n    (dotimes [_ 10]\n      (let [nite 100000\n            a (atom 0)\n            f (fn []\n                (quot @a 10))\n            mid (make-reaction f)\n            res (track! (fn []\n                          ;; (with-let [x 1])\n                          ;; @(track f)\n                          (inc @mid)\n                          ))]\n        @res\n        (time (dotimes [x nite]\n                (swap! a inc)\n                (flush!)))\n        (dispose! res))))\n  (ratom-perf))\n","~:reader-features",["^E",["~:cljs"]],"~:used-var-namespaces",["^E",["^[","^P","^12","~$js","^13","^14","^15","^B"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["js/reagent","js/reagent.ratom","js/reagent.ratom.debug","reagent.ratom/debug","js/reagent.ratom.generation","reagent.ratom/generation","js/reagent.ratom.-running","reagent.ratom/-running","cljs.core.atom","reagent.ratom/reactive?","reagent.ratom/*ratom-context*","reagent.ratom/running","cljs.core/deref","reagent.ratom/arr-len","x","reagent.ratom/arr-eq","y","len","and__5023__auto__","i","or__5025__auto__","reagent.ratom/in-context","obj","f","*ratom-context*-orig-val__8013","*ratom-context*-temp-val__8014","reagent.ratom/deref-capture","r","res","c","reagent.ratom/notify-deref-watcher!","derefed","temp__5827__auto__","reagent.ratom/check-watches","old","new","cljs.core.swap_BANG_","cljs.core/+","cljs.core/count","reagent.ratom/add-w","this","key","w","cljs.core.assoc","reagent.ratom/remove-w","cljs.core.dissoc","reagent.ratom/notify-w","a","p1__8015#","p2__8016#","p3__8017#","cljs.core/reduce-kv","G__8018","k","reagent.ratom/pr-atom","writer","opts","s","v","cljs.core/-write","cljs.core/pr-writer","*ratom-context*-orig-val__8023","*ratom-context*-temp-val__8024","js/reagent.ratom.rea-queue","reagent.ratom/rea-queue","reagent.ratom/rea-enqueue","reagent.impl.batching/schedule","reagent.ratom/IReactiveAtom","cljs.core/PROTOCOL_SENTINEL","this__5310__auto__","writer__5311__auto__","opt__5312__auto__","reagent.ratom/RAtom","reagent.ratom/->RAtom","state","meta","validator","watches","o","other","new-value","js/Error","old-value","more","cljs.core.apply","_","new-meta","goog/getUid","var_args","G__8038","reagent.ratom/atom","args-arr__5774__auto__","len__5749__auto__","i__5750__auto__","argseq__5775__auto__","cljs.core/IndexedSeq","p__8040","map__8041","cljs.core/--destructure-map","cljs.core.get","seq8036","G__8037","cljs.core/first","cljs.core/next","self__5734__auto__","reagent.ratom/cached-reaction","destroy","m","cljs.core/-deref","G__8047","G__8048","G__8049","reagent.ratom/make-reaction","cljs.core/dec","cljs.core/inc","reagent.ratom/Track","reagent.ratom/->Track","args","reaction","temp__5825__auto__","cljs.core._EQ_","cljs.core/hash","reagent.ratom/make-track","reagent.ratom/make-track!","t","G__8074","G__8075","G__8076","args__5755__auto__","argseq__5756__auto__","reagent.ratom/track","seq8080","G__8083","cljs.core/ifn?","reagent.ratom/track!","seq8094","G__8095","reagent.ratom/RCursor","reagent.ratom/->RCursor","ratom","path","*ratom-context*-orig-val__8109","*ratom-context*-temp-val__8110","oldstate","newstate","cljs.core/native-satisfies?","cljs.core/IDeref","cljs.core.get_in","cljs.core/reset!","cljs.core/assoc-in","G__8119","G__8124","G__8125","G__8132","G__8133","G__8134","reagent.ratom/cursor","src","cljs.core/vector?","cljs.core.pr_str","reagent.ratom/with-let-destroy","reagent.ratom/with-let-values","reagent$ratom$IDisposable$dispose_BANG_$dyn","x__5373__auto__","m__5374__auto__","reagent.ratom/dispose!","goog/typeOf","m__5372__auto__","cljs.core/missing-protocol","reagent$ratom$IDisposable$add_on_dispose_BANG_$dyn","reagent.ratom/add-on-dispose!","reagent.ratom/IDisposable","reagent$ratom$IRunnable$run$dyn","reagent.ratom/run","reagent.ratom/IRunnable","reagent.ratom/handle-reaction-change","sender","p__8330","map__8332","reagent.ratom/Reaction","reagent.ratom/->Reaction","dirty?","nocache?","watching","auto-run","caught","was-empty","cljs.core/empty?","newval","cljs.core/fn?","oldval","G__8356","G__8363","G__8364","G__8371","G__8372","G__8373","*ratom-context*-orig-val__8260","*ratom-context*-temp-val__8261","cljs.core/set","seq__8278","cljs.core/seq","chunk__8279","count__8280","i__8281","temp__5823__auto__","cljs.core/chunked-seq?","c__5548__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","clojure.set.difference","cljs.core/-add-watch","seq__8315","chunk__8316","count__8317","i__8318","cljs.core/-remove-watch","e8329","e","check","on-set","on-dispose","no-cache","reagent.ratom/flush!","non-reactive","wg","seq__8336","chunk__8337","count__8338","i__8339","n__5616__auto__","fexpr__8344","q","reagent.impl.batching/ratom-flush","p__8422","map__8423","seq8420","G__8421","reagent.ratom/temp-reaction","reagent.ratom/run-in-reaction","run","reagent.ratom.goog$module$goog$object.set","reagent.ratom/check-derefs","ctx","reagent.ratom/Wrapper","reagent.ratom/->Wrapper","callback","changed","reagent.debug/has-console","reagent.debug/tracking","reagent.debug/track-console","js/console","cljs.core/not","reagent.ratom/make-wrapper","value","callback-fn","reagent.impl.util/make-partial-fn"]],"~:used-vars",["^E",["~$cljs.core/--destructure-map","~$cljs.core/PROTOCOL_SENTINEL","~$reagent.ratom/check-derefs","~$reagent.ratom/generation","~$reagent.ratom/make-track!","~$reagent.ratom/run","~$reagent.ratom/remove-w","~$js/reagent.ratom.debug","~$cljs.core/vector?","~$cljs.core/=","~$cljs.core/dec","~$cljs.core/ifn?","~$js/reagent.ratom.-running","~$reagent.ratom/->RAtom","~$cljs.core/-write","~$cljs.core/IndexedSeq","~$cljs.core/-deref","~$cljs.core/pr-writer","~$cljs.core/hash","~$cljs.core/-reset!","~$cljs.core/count","~$cljs.core/deref","~$goog/typeOf","~$reagent.ratom/arr-len","~$cljs.core/seq","~$cljs.core/chunk-first","~$cljs.core/apply","~$js/reagent.ratom.generation","~$goog/getUid","~$reagent.ratom/flush!","~$reagent.ratom/notify-deref-watcher!","~$cljs.core/dissoc","~$reagent.ratom/check-watches","~$reagent.ratom/with-let-destroy","~$cljs.core/chunk-rest","~$cljs.core/atom","~$reagent.ratom/debug","~$reagent.ratom/rea-enqueue","~$reagent.debug/has-console","~$js/reagent","~$cljs.core/pr-str","~$reagent.ratom/RCursor","~$js/console","~$cljs.core/set","~$reagent.ratom/make-wrapper","~$cljs.core/native-satisfies?","~$cljs.core/empty?","~$reagent.ratom/IReactiveAtom","~$reagent.ratom/track","~$reagent.impl.util/make-partial-fn","~$cljs.core/reset!","~$reagent.ratom/cached-reaction","~$reagent.ratom/Wrapper","~$reagent.ratom.goog$module$goog$object.set","~$cljs.core/-add-watch","~$reagent.ratom/track!","~$reagent.ratom/dispose!","~$js/reagent.ratom.rea-queue","~$reagent.ratom/->Reaction","~$reagent.ratom/running","~$reagent.ratom/make-reaction","~$reagent.ratom/IRunnable","~$reagent.ratom/notify-w","~$cljs.core/fn?","~$reagent.ratom/rea-queue","~$reagent.ratom/add-on-dispose!","~$cljs.core/get-in","~$reagent.impl.batching/ratom-flush","~$cljs.core/swap!","~$js/reagent.ratom","~$reagent.ratom/arr-eq","~$cljs.core/get","~$reagent.ratom/handle-reaction-change","~$reagent.ratom/temp-reaction","~$reagent.debug/tracking","~$cljs.core/-nth","~$clojure.set/difference","~$cljs.core/-remove-watch","~$cljs.core/missing-protocol","~$reagent.debug/track-console","~$reagent.ratom/run-in-reaction","~$reagent.ratom/->Track","~$reagent.impl.batching/schedule","~$cljs.core/next","~$reagent.ratom/*ratom-context*","~$reagent.ratom/IDisposable","~$reagent.ratom/->Wrapper","~$reagent.ratom/Track","~$cljs.core/IDeref","~$reagent.ratom/cursor","~$cljs.core/not","~$reagent.ratom/make-track","~$reagent.ratom/add-w","~$cljs.core/assoc","~$cljs.core/assoc-in","~$reagent.ratom/-running","~$reagent.ratom/Reaction","~$cljs.core/reduce-kv","~$reagent.ratom/RAtom","~$cljs.core/first","~$reagent.ratom/reactive?","~$reagent.ratom/atom","~$reagent.ratom/deref-capture","~$cljs.core/+","~$js/Error","~$reagent.ratom/in-context","~$reagent.ratom/with-let-values","~$cljs.core/inc","~$reagent.ratom/->RCursor","~$cljs.core/chunked-seq?","~$reagent.ratom/pr-atom"]]],"~:cache-keys",["~#cmap",[["^1F","reagent/impl/batching.cljs"],["4caaa52545ee26bd20d35e6e27879b12ea4f9c3f","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^E",[]],"~:deps-syms",["^13","^12","^B","^["]]],["^1F","goog/dom/tagname.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^4A",["^ ","^4B",null,"^4C",["^E",[]],"^4D",["^13","~$goog.dom.HtmlElement"]]],["^1F","goog/html/trustedtypes.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^4A",["^ ","^4B",null,"^4C",["^E",[]],"^4D",["^13"]]],["^1F","goog/labs/useragent/browser.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^4A",["^ ","^4B",null,"^4C",["^E",[]],"^4D",["^13","~$goog.labs.userAgent.util","~$goog.labs.userAgent.highEntropy.highEntropyValue","~$goog.labs.userAgent.chromiumRebrands","~$goog.asserts","~$goog.string.internal","~$goog.labs.userAgent.highEntropy.highEntropyData","~$goog.labs.userAgent"]]],["^1F","goog/html/safeurl.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^4A",["^ ","^4B",null,"^4C",["^E",[]],"^4D",["^13","^4I","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.string.Const","~$goog.string.TypedString","^4J"]]],["^1F","goog/array/array.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^4A",["^ ","^4B",null,"^4C",["^E",[]],"^4D",["^13","^4I"]]],["^1F","reagent/impl/util.cljs"],["4caaa52545ee26bd20d35e6e27879b12ea4f9c3f","^4A",["^ ","^4B",null,"^4C",["^E",[]],"^4D",["^13","^12","~$clojure.string","~$clojure.walk","^11","^B"]]],["^1F","goog/debug/error.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^4A",["^ ","^4B",null,"^4C",["^E",[]],"^4D",["^13"]]],["^1F","goog/flags/flags.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^4A",["^ ","^4B",null,"^4C",["^E",[]],"^4D",["^13"]]],["^1F","goog/dom/nodetype.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^4A",["^ ","^4B",null,"^4C",["^E",[]],"^4D",["^13"]]],["^1F","goog/labs/useragent/highentropy/highentropyvalue.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^4A",["^ ","^4B",null,"^4C",["^E",[]],"^4D",["^13","^4F","^4J"]]],["^1F","reagent/ratom.cljs"],["4caaa52545ee26bd20d35e6e27879b12ea4f9c3f","^4A",["^ ","^4B",null,"^4C",["^E",[]],"^4D",["^13","^12","^[","^B","^14","^15","^11"]]],["^1F","goog/string/typedstring.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^4A",["^ ","^4B",null,"^4C",["^E",[]],"^4D",["^13"]]],["^1F","goog/object/object.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^4A",["^ ","^4B",null,"^4C",["^E",[]],"^4D",["^13"]]],["^1F","goog/dom/asserts.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^4A",["^ ","^4B",null,"^4C",["^E",[]],"^4D",["^13","^4I"]]],"~:SHADOW-TIMESTAMP",[1755971180000,1755971180000,1755971172000],["^1F","goog/math/long.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^4A",["^ ","^4B",null,"^4C",["^E",[]],"^4D",["^13","^4I","~$goog.reflect"]]],["^1F","goog/html/trustedresourceurl.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^4A",["^ ","^4B",null,"^4C",["^E",[]],"^4D",["^13","^4I","~$goog.fs.blob","^4M","~$goog.html.SafeScript","~$goog.html.trustedtypes","^4O","^4P"]]],["^1F","goog/string/internal.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^4A",["^ ","^4B",null,"^4C",["^E",[]],"^4D",["^13"]]],["^1F","goog/functions/functions.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^4A",["^ ","^4B",null,"^4C",["^E",[]],"^4D",["^13"]]],["^1F","goog/html/safestyle.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^4A",["^ ","^4B",null,"^4C",["^E",[]],"^4D",["^13","^4O","~$goog.html.SafeUrl","^4P","^4I","^4J"]]],["^1F","goog/dom/safe.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^4A",["^ ","^4B",null,"^4C",["^E",[]],"^4D",["^13","^4I","~$goog.asserts.dom","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^4V","~$goog.html.SafeStyle","^4X","^4N","~$goog.html.uncheckedconversions","^4O","^4J"]]],["^1F","goog/asserts/dom.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^4A",["^ ","^4B",null,"^4C",["^E",[]],"^4D",["^13","~$goog.dom.TagName","^4I","~$goog.dom.element"]]],["^1F","clojure/walk.cljs"],["29b0d50db86dc25d9e60d7c39586a3f5dfbf4c5b","^4A",["^ ","^4B",null,"^4C",["^E",[]],"^4D",["^13","^12"]]],["^1F","goog/html/safehtml.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^4A",["^ ","^4B",null,"^4C",["^E",[]],"^4D",["^13","^4O","^4V","^51","~$goog.html.SafeStyleSheet","^4X","^53","^4N","^4P","^4I","~$goog.labs.userAgent.browser","~$goog.array","^11","^4J","~$goog.dom.tags","^4W"]]],["^1F","goog/dom/tags.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^4A",["^ ","^4B",null,"^4C",["^E",[]],"^4D",["^13","^11"]]],["^1F","goog/fs/blob.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^4A",["^ ","^4B",null,"^4C",["^E",[]],"^4D",["^13"]]],["^1F","goog/asserts/asserts.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^4A",["^ ","^4B",null,"^4C",["^E",[]],"^4D",["^13","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1F","goog/uri/uri.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^4A",["^ ","^4B",null,"^4C",["^E",[]],"^4D",["^13","^57","^4I","~$goog.collections.maps","~$goog.string","~$goog.structs","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1F","goog/labs/useragent/highentropy/highentropydata.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^4A",["^ ","^4B",null,"^4C",["^E",[]],"^4D",["^13","^4G"]]],["^1F","goog/collections/maps.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^4A",["^ ","^4B",null,"^4C",["^E",[]],"^4D",["^13"]]],["^1F","goog/fs/url.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^4A",["^ ","^4B",null,"^4C",["^E",[]],"^4D",["^13"]]],["^1F","goog/base.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^4A",["^ ","^4B",null,"^4C",["^E",[]],"^4D",[]]],["^1F","goog/structs/structs.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^4A",["^ ","^4B",null,"^4C",["^E",[]],"^4D",["^13","^57","^11"]]],["^1F","clojure/string.cljs"],["29b0d50db86dc25d9e60d7c39586a3f5dfbf4c5b","^4A",["^ ","^4B",null,"^4C",["^E",[]],"^4D",["^13","^12","^5<","~$goog.string.StringBuffer"]]],["^1F","goog/string/string.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^4A",["^ ","^4B",null,"^4C",["^E",[]],"^4D",["^13","~$goog.dom.safe","^52","^4O","^4J"]]],["^1F","goog/reflect/reflect.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^4A",["^ ","^4B",null,"^4C",["^E",[]],"^4D",["^13"]]],["^1F","goog/labs/useragent/util.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^4A",["^ ","^4B",null,"^4C",["^E",[]],"^4D",["^13","^4J","^4L"]]],["^1F","goog/string/stringbuffer.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^4A",["^ ","^4B",null,"^4C",["^E",[]],"^4D",["^13"]]],["^1F","goog/labs/useragent/chromium_rebrands.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^4A",["^ ","^4B",null,"^4C",["^E",[]],"^4D",["^13"]]],["^1F","goog/labs/useragent/useragent.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^4A",["^ ","^4B",null,"^4C",["^E",[]],"^4D",["^13","~$goog.flags"]]],["^1F","goog/dom/element.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^4A",["^ ","^4B",null,"^4C",["^E",[]],"^4D",["^13","^5:","^53"]]],["^1F","goog/html/uncheckedconversions.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^4A",["^ ","^4B",null,"^4C",["^E",[]],"^4D",["^13","^4I","^50","^4V","^51","^55","^4X","^4N","^4O","^4J"]]],["^1F","goog/dom/htmlelement.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^4A",["^ ","^4B",null,"^4C",["^E",[]],"^4D",["^13"]]],["^1F","cljs/core.cljs"],["29b0d50db86dc25d9e60d7c39586a3f5dfbf4c5b","^4A",["^ ","^4B",null,"^4C",["^E",[]],"^4D",["^13","~$goog.math.Long","~$goog.math.Integer","^5<","^11","^57","~$goog.Uri","^5A"]]],["^1F","goog/html/safescript.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^4A",["^ ","^4B",null,"^4C",["^E",[]],"^4D",["^13","^4O","^4P","^4W","^4I"]]],["^1F","reagent/debug.cljs"],["4caaa52545ee26bd20d35e6e27879b12ea4f9c3f","^4A",["^ ","^4B",null,"^4C",["^E",[]],"^4D",["^13","^12"]]],["^1F","goog/html/safestylesheet.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^4A",["^ ","^4B",null,"^4C",["^E",[]],"^4D",["^13","^4O","^51","^4P","^11","^4I","^4J"]]],["^1F","goog/math/integer.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^4A",["^ ","^4B",null,"^4C",["^E",[]],"^4D",["^13","^4T"]]],["^1F","clojure/set.cljs"],["29b0d50db86dc25d9e60d7c39586a3f5dfbf4c5b","^4A",["^ ","^4B",null,"^4C",["^E",[]],"^4D",["^13","^12"]]],["^1F","goog/uri/utils.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^4A",["^ ","^4B",null,"^4C",["^E",[]],"^4D",["^13","^4I","^5<"]]],["^1F","goog/string/const.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^4A",["^ ","^4B",null,"^4C",["^E",[]],"^4D",["^13","^4I","^4P"]]]]],"~:clj-info",["^ ","jar:file:/home/rgroot/.m2/repository/reagent/reagent/2.0.0-alpha2/reagent-2.0.0-alpha2.jar!/reagent/ratom.clj",1755972568000,"jar:file:/home/rgroot/.m2/repository/org/clojure/clojure/1.12.0/clojure-1.12.0.jar!/clojure/string.clj",1755971168000,"jar:file:/home/rgroot/.m2/repository/org/clojure/clojurescript/1.12.42/clojurescript-1.12.42.jar!/cljs/analyzer.cljc",1755971172000,"jar:file:/home/rgroot/.m2/repository/reagent/reagent/2.0.0-alpha2/reagent-2.0.0-alpha2.jar!/reagent/debug.clj",1755972568000,"jar:file:/home/rgroot/.m2/repository/org/clojure/clojurescript/1.12.42/clojurescript-1.12.42.jar!/cljs/vendor/clojure/data/json.clj",1755971172000,"jar:file:/home/rgroot/.m2/repository/org/clojure/clojurescript/1.12.42/clojurescript-1.12.42.jar!/cljs/vendor/clojure/tools/reader/default_data_readers.clj",1755971172000,"jar:file:/home/rgroot/.m2/repository/org/clojure/clojure/1.12.0/clojure-1.12.0.jar!/clojure/core.clj",1755971168000,"jar:file:/home/rgroot/.m2/repository/org/clojure/clojurescript/1.12.42/clojurescript-1.12.42.jar!/cljs/vendor/clojure/tools/reader/impl/errors.clj",1755971172000,"jar:file:/home/rgroot/.m2/repository/org/clojure/clojurescript/1.12.42/clojurescript-1.12.42.jar!/cljs/analyzer/impl/namespaces.cljc",1755971172000,"jar:file:/home/rgroot/.m2/repository/org/clojure/clojurescript/1.12.42/clojurescript-1.12.42.jar!/cljs/instant.clj",1755971172000,"jar:file:/home/rgroot/.m2/repository/org/clojure/clojurescript/1.12.42/clojurescript-1.12.42.jar!/cljs/compiler.cljc",1755971172000,"jar:file:/home/rgroot/.m2/repository/org/clojure/clojurescript/1.12.42/clojurescript-1.12.42.jar!/cljs/analyzer/passes.cljc",1755971172000,"jar:file:/home/rgroot/.m2/repository/org/clojure/clojurescript/1.12.42/clojurescript-1.12.42.jar!/cljs/source_map/base64.clj",1755971172000,"jar:file:/home/rgroot/.m2/repository/org/clojure/clojurescript/1.12.42/clojurescript-1.12.42.jar!/cljs/externs.clj",1755971172000,"jar:file:/home/rgroot/.m2/repository/reagent/reagent/2.0.0-alpha2/reagent-2.0.0-alpha2.jar!/reagent/interop.clj",1755972568000,"jar:file:/home/rgroot/.m2/repository/org/clojure/clojurescript/1.12.42/clojurescript-1.12.42.jar!/cljs/env.cljc",1755971172000,"jar:file:/home/rgroot/.m2/repository/org/clojure/clojurescript/1.12.42/clojurescript-1.12.42.jar!/cljs/js_deps.cljc",1755971172000,"jar:file:/home/rgroot/.m2/repository/org/clojure/clojurescript/1.12.42/clojurescript-1.12.42.jar!/cljs/vendor/clojure/tools/reader/reader_types.clj",1755971172000,"jar:file:/home/rgroot/.m2/repository/org/clojure/clojurescript/1.12.42/clojurescript-1.12.42.jar!/cljs/source_map.clj",1755971172000,"jar:file:/home/rgroot/.m2/repository/org/clojure/clojurescript/1.12.42/clojurescript-1.12.42.jar!/cljs/tagged_literals.cljc",1755971172000,"jar:file:/home/rgroot/.m2/repository/org/clojure/clojurescript/1.12.42/clojurescript-1.12.42.jar!/cljs/source_map/base64_vlq.clj",1755971172000,"jar:file:/home/rgroot/.m2/repository/org/clojure/clojure/1.12.0/clojure-1.12.0.jar!/clojure/java/io.clj",1755971168000,"jar:file:/home/rgroot/.m2/repository/org/clojure/clojurescript/1.12.42/clojurescript-1.12.42.jar!/cljs/vendor/clojure/tools/reader/impl/inspect.clj",1755971172000,"jar:file:/home/rgroot/.m2/repository/org/clojure/clojurescript/1.12.42/clojurescript-1.12.42.jar!/cljs/analyzer/passes/and_or.cljc",1755971172000,"jar:file:/home/rgroot/.m2/repository/org/clojure/clojure/1.12.0/clojure-1.12.0.jar!/clojure/set.clj",1755971168000,"jar:file:/home/rgroot/.m2/repository/org/clojure/clojure/1.12.0/clojure-1.12.0.jar!/clojure/instant.clj",1755971168000,"jar:file:/home/rgroot/.m2/repository/org/clojure/clojurescript/1.12.42/clojurescript-1.12.42.jar!/cljs/core.cljc",1755971172000,"jar:file:/home/rgroot/.m2/repository/org/clojure/clojurescript/1.12.42/clojurescript-1.12.42.jar!/cljs/vendor/clojure/tools/reader.clj",1755971172000,"jar:file:/home/rgroot/.m2/repository/org/clojure/clojurescript/1.12.42/clojurescript-1.12.42.jar!/cljs/util.cljc",1755971172000,"jar:file:/home/rgroot/.m2/repository/org/clojure/clojurescript/1.12.42/clojurescript-1.12.42.jar!/cljs/analyzer/impl.cljc",1755971172000,"jar:file:/home/rgroot/.m2/repository/org/clojure/clojure/1.12.0/clojure-1.12.0.jar!/clojure/pprint.clj",1755971168000,"jar:file:/home/rgroot/.m2/repository/org/clojure/clojure/1.12.0/clojure-1.12.0.jar!/clojure/edn.clj",1755971168000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","reagent/ratom.cljs","^7",1,"^8",5,"^9",1,"^:",18],"^;",["^ ","^<","^=","^>","^?"],"~:shadow/protocol-prefixes",["^E",["reagent$ratom$IReactiveAtom$","reagent$ratom$IRunnable$","reagent$ratom$IDisposable$"]],"^@",["^ ","^A","^B","^C","^B"],"^D",["^E",["^F"]],"^G",["^ ","^H",["^ ","^I",["^J",[["^K","~$&","^L"]]],"^7",26,"^8",1,"^6","reagent/ratom.clj","^M","^N","^O","^P","^Q",true],"^R",["^ ","^I",["^J",[["~$&","^L"]]],"^S","Prefer using reagent.core/reaction.","^7",8,"^8",1,"^6","reagent/ratom.clj","^M","^T","^O","^P","^Q",true],"^U",["^ ","^I",["^J",[["~$&","^L"]]],"^S","Creates a Reaction from the body, and runs the body immediately\n  and again whenever atoms deferenced in the body\n  change. Body should side effect.\n\n  Use dispose! to stop running the Reaction.","^7",14,"^8",1,"^6","reagent/ratom.clj","^M","^V","^O","^P","^Q",true]],"~:shadow/js-access-properties",["^E",["_run","_peek-at","_update-watching","_queued-run","_set-opts","_peek","_set-state","_handle-change","_try-capture"]],"^M","^P","^W",["^ "],"^Y",null,"^Z",["^ ","^[","^[","^10","^11","^12","^12","^13","^13","^11","^11","^14","^14","^15","^15","^16","^[","~$s","^15","^17","^14","^B","^B"],"^18",["^E",["^19","^1:"]],"~:shadow/js-access-global",["^E",["Error"]],"^1;",null,"~:defs",["^ ","~$pr-atom",["^ ","~:protocol-inline",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",107,"^8",8,"^9",107,"^:",15,"~:private",true,"^I",["^J",["~$quote",["^J",[["~$a","~$writer","~$opts","~$s","~$v"]]]]]],"^6C",true,"^M","^4>","^6","reagent/ratom.cljs","^:",15,"~:method-params",["^J",[["~$a","^6E","^6F","~$s","~$v"]]],"~:protocol-impl",null,"~:arglists-meta",["^J",[null,null]],"^8",1,"~:variadic?",false,"^7",107,"~:ret-tag","~$any","^9",107,"~:max-fixed-arity",5,"~:fn-var",true,"^I",["^J",["^6D",["^J",[["~$a","^6E","^6F","~$s","~$v"]]]]]],"~$->RCursor",["^ ","^6B",null,"^5",["^ ","~:protocols",["^E",["~$cljs.core/IWatchable","~$cljs.core/IAtom","~$cljs.core/IEquiv","~$cljs.core/IHash","~$cljs.core/Object","~$cljs.core/IReset","~$cljs.core/ISwap","^2W","~$cljs.core/IMeta","^3T","~$cljs.core/IPrintWithWriter","~$cljs.core/IWithMeta"]],"^6","reagent/ratom.cljs","^:",17,"^8",10,"~:factory","~:positional","^7",248,"^9",248,"^I",["^J",["^6D",["^J",[["~$ratom","~$path","^R","~$state","~$watches","~$meta"]]]]],"~:skip-protocol-flag",["^E",["^6Q","^6R","^6S","^6T","^6V","^6W","^6X","^3T","^6Y","^6Z"]],"^S","Positional factory function for reagent.ratom/RCursor."],"^6P",["^E",["^6Q","^6R","^6S","^6T","^6U","^6V","^6W","^2W","^6X","^3T","^6Y","^6Z"]],"^M","^4<","^6","reagent/ratom.cljs","^:",17,"^6G",["^J",[["^71","^72","^R","^73","^74","^75"]]],"^6H",null,"^6I",["^J",[null,null]],"^8",1,"^6J",false,"^6[","^70","^7",248,"^6K","^2Q","^9",248,"^6M",6,"^6N",true,"^I",["^J",["^6D",["^J",[["^71","^72","^R","^73","^74","^75"]]]]],"^76",["^E",["^6Q","^6R","^6S","^6T","^6V","^6W","^6X","^3T","^6Y","^6Z"]],"^S","Positional factory function for reagent.ratom/RCursor."],"~$notify-deref-watcher!",["^ ","^6B",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",65,"^8",8,"^9",65,"^:",29,"^6C",true,"^I",["^J",["^6D",["^J",[["~$derefed"]]]]],"^S","Add `derefed` to the `captured` field of `*ratom-context*`.\n\n  See also `in-context`"],"^6C",true,"^M","^2F","^6","reagent/ratom.cljs","^:",29,"^6G",["^J",[["^78"]]],"^6H",null,"^6I",["^J",[null,null]],"^8",1,"^6J",false,"^7",65,"^6K",["^E",[null,"^6L","~$clj-nil"]],"^9",65,"^6M",1,"^6N",true,"^I",["^J",["^6D",["^J",[["^78"]]]]],"^S","Add `derefed` to the `captured` field of `*ratom-context*`.\n\n  See also `in-context`"],"~$rea-enqueue",["^ ","^6B",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",117,"^8",8,"^9",117,"^:",19,"^6C",true,"^I",["^J",["^6D",["^J",[["~$r"]]]]]],"^6C",true,"^M","^2M","^6","reagent/ratom.cljs","^:",19,"^6G",["^J",[["~$r"]]],"^6H",null,"^6I",["^J",[null,null]],"^8",1,"^6J",false,"^7",117,"^6K","^6L","^9",117,"^6M",1,"^6N",true,"^I",["^J",["^6D",["^J",[["~$r"]]]]]],"~$in-context",["^ ","^6B",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",38,"^8",8,"^9",38,"^:",18,"^6C",true,"^I",["^J",["^6D",["^J",[["^10","~$f"]]]]],"^S","When f is executed, if (f) derefs any ratoms, they are then added to 'obj.captured'(*ratom-context*).\n\n  See function notify-deref-watcher! to know how *ratom-context* is updated"],"^6C",true,"^M","^49","^6","reagent/ratom.cljs","^:",18,"^6G",["^J",[["^10","~$f"]]],"^6H",null,"^6I",["^J",[null,null]],"^8",1,"^6J",false,"^7",38,"^9",38,"^6M",2,"^6N",true,"^I",["^J",["^6D",["^J",[["^10","~$f"]]]]],"^S","When f is executed, if (f) derefs any ratoms, they are then added to 'obj.captured'(*ratom-context*).\n\n  See function notify-deref-watcher! to know how *ratom-context* is updated"],"~$make-track",["^ ","^6B",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",228,"^8",7,"^9",228,"^:",17,"^I",["^J",["^6D",["^J",[["~$f","~$args"]]]]]],"^M","^3W","^6","reagent/ratom.cljs","^:",17,"^6G",["^J",[["~$f","^7="]]],"^6H",null,"^6I",["^J",[null,null]],"^8",1,"^6J",false,"^7",228,"^6K","^3S","^9",228,"^6M",2,"^6N",true,"^I",["^J",["^6D",["^J",[["~$f","^7="]]]]]],"~$RAtom",["^ ","~:num-fields",4,"^6P",["^E",["^6Q","^6R","^6S","^6T","^6V","^6W","^2W","^6X","^3T","^6Y","^6Z"]],"^M","^42","^6","reagent/ratom.cljs","^:",15,"~:type",true,"^8",10,"^7",127,"~:record",false,"^9",127,"~:tag","~$function","^76",["^E",["^6Q","^6R","^6S","^6T","^6V","^6W","^6X","^3T","^6Y","^6Z"]]],"^F",["^ ","^6B",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",172,"^8",7,"^9",172,"^:",11,"^I",["^J",["^6D",["^J",[["~$x"],["~$x","~$&",["^ ","~:keys",["^75","~$validator"]]]]]]],"^S","Like clojure.core/atom, except that it keeps track of derefs.","~:top-fn",["^ ","^6J",true,"~:fixed-arity",1,"^6M",1,"^6G",[["~$x"]],"^I",["^J",[["~$x"],["~$x","~$&",["^ ","^7D",["^75","^7E"]]]]],"^6I",["^J",[null,null]]]],"^M","^45","^6","reagent/ratom.cljs","^:",11,"^7F",["^ ","^6J",true,"^7G",1,"^6M",1,"^6G",[["~$x"]],"^I",["^J",[["~$x"],["~$x","~$&",["^ ","^7D",["^75","^7E"]]]]],"^6I",["^J",[null,null]]],"^6G",[["~$x"]],"^6H",null,"^7G",1,"^6I",["^J",[null,null]],"^8",1,"^6J",true,"~:methods",[["^ ","^7G",1,"^6J",false,"^7B","^42"],["^ ","^7G",1,"^6J",true,"^7B","^42"]],"^7",172,"^9",172,"^6M",1,"^6N",true,"^I",["^J",[["~$x"],["~$x","~$&",["^ ","^7D",["^75","^7E"]]]]],"^S","Like clojure.core/atom, except that it keeps track of derefs."],"~$notify-w",["^ ","^6B",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",91,"^8",8,"^9",91,"^:",16,"^6C",true,"^I",["^J",["^6D",["^J",[["~$this","~$old","~$new"]]]]]],"^6C",true,"^M","^3:","^6","reagent/ratom.cljs","^:",16,"^6G",["^J",[["^7J","^7K","^7L"]]],"^6H",null,"^6I",["^J",[null,null]],"^8",1,"^6J",false,"^7",91,"^6K","^79","^9",91,"^6M",3,"^6N",true,"^I",["^J",["^6D",["^J",[["^7J","^7K","^7L"]]]]]],"~$->Reaction",["^ ","^6B",null,"^5",["^ ","^6P",["^E",["^6Q","^6R","^6S","^6T","^6U","^6V","^6W","^2W","^39","^3Q","^3T","^6Y"]],"^6","reagent/ratom.cljs","^:",18,"^8",10,"^6[","^70","^7",362,"^9",362,"^I",["^J",["^6D",["^J",[["~$f","^73","~$dirty?","~$nocache?","~$watching","^74","~$auto-run","~$caught"]]]]],"^76",["^E",["^6Q","^6R","^6S","^6T","^6V","^6W","^3T","^6Y"]],"^S","Positional factory function for reagent.ratom/Reaction."],"^6P",["^E",["^6Q","^6R","^6S","^6T","^6U","^6V","^6W","^2W","^39","^3Q","^3T","^6Y"]],"^M","^36","^6","reagent/ratom.cljs","^:",18,"^6G",["^J",[["~$f","^73","^7N","^7O","^7P","^74","^7Q","^7R"]]],"^6H",null,"^6I",["^J",[null,null]],"^8",1,"^6J",false,"^6[","^70","^7",362,"^6K","^40","^9",362,"^6M",8,"^6N",true,"^I",["^J",["^6D",["^J",[["~$f","^73","^7N","^7O","^7P","^74","^7Q","^7R"]]]]],"^76",["^E",["^6Q","^6R","^6S","^6T","^6V","^6W","^3T","^6Y"]],"^S","Positional factory function for reagent.ratom/Reaction."],"~$make-wrapper",["^ ","^6B",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",616,"^8",7,"^9",616,"^:",19,"^I",["^J",["^6D",["^J",[["~$value","~$callback-fn","^7="]]]]]],"^M","^2T","^6","reagent/ratom.cljs","^:",19,"^6G",["^J",[["^7T","^7U","^7="]]],"^6H",null,"^6I",["^J",[null,null]],"^8",1,"^6J",false,"^7",616,"^6K","^30","^9",616,"^6M",3,"^6N",true,"^I",["^J",["^6D",["^J",[["^7T","^7U","^7="]]]]]],"~$IReactiveAtom",["^ ","^5",["^ ","~:protocol-symbol",true,"^6","reagent/ratom.cljs","^:",27,"^8",14,"^7",125,"~:protocol-info",["^ ","^7H",["^ "]],"^9",125,"~:sigs",["^ "],"~:jsdoc",["^J",["@interface"]]],"^7W",true,"^M","^2W","^6","reagent/ratom.cljs","^:",27,"^8",1,"^7",125,"^7X",["^ ","^7H",["^ "]],"~:info",null,"^9",125,"^7B","^6L","^7Y",["^ "],"~:impls",["^E",["^2Q","^3S","^40","^42"]],"^7Z",["^J",["@interface"]]],"~$track",["^ ","^6B",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",238,"^8",7,"^9",238,"^:",12,"^I",["^J",["^6D",["^J",[["~$f","~$&","^7="]]]]],"^7F",["^ ","^6J",true,"^7G",1,"^6M",1,"^6G",[["^J",["~$f","^7="]]],"^I",["^J",[["~$f","~$&","^7="]]],"^6I",["^J",[null]]]],"^M","^2X","^6","reagent/ratom.cljs","^:",12,"^7F",["^ ","^6J",true,"^7G",1,"^6M",1,"^6G",[["^J",["~$f","^7="]]],"^I",["^J",[["~$f","~$&","^7="]]],"^6I",["^J",[null]]],"^6G",[["^J",["~$f","^7="]]],"^6H",null,"^7G",1,"^6I",["^J",[null]],"^8",1,"^6J",true,"^7H",[["^ ","^7G",1,"^6J",true,"^7B","^3S"]],"^7",238,"^6K","^6L","^9",238,"^6M",1,"^6N",true,"^I",["^J",[["~$f","~$&","^7="]]]],"~$dispose!",["^ ","^6B",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",344,"^8",4,"^9",344,"^:",12,"~:protocol","^3Q","^S",null,"^I",["^J",["^6D",["^J",[["^7J"]]]]]],"^83","^3Q","^M","^34","^6","reagent/ratom.cljs","^:",12,"^6G",["^J",[["^7J"]]],"^6H",null,"^6I",["^J",[null,null]],"^8",1,"^6J",false,"^7",343,"^6K","^6L","^9",344,"^6M",1,"^6N",true,"^I",["^J",["^6D",["^J",[["^7J"]]]]],"^S",null],"~$arr-eq",["^ ","^6B",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",29,"^8",17,"^9",29,"^:",23,"^7B","~$boolean","^6C",true,"^I",["^J",["^6D",["^J",[["~$x","~$y"]]]]]],"^6C",true,"^M","^3B","^6","reagent/ratom.cljs","^:",23,"^6G",["^J",[["~$x","~$y"]]],"^6H",null,"^6I",["^J",[null,null]],"^8",1,"^6J",false,"^7",29,"^6K","^85","^9",29,"^6M",2,"^7B","^85","^6N",true,"^I",["^J",["^6D",["^J",[["~$x","~$y"]]]]]],"~$handle-reaction-change",["^ ","^6B",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",350,"^8",8,"^9",350,"^:",30,"^6C",true,"^I",["^J",["^6D",["^J",[["^7J","~$sender","^7K","^7L"]]]]]],"^6C",true,"^M","^3D","^6","reagent/ratom.cljs","^:",30,"^6G",["^J",[["^7J","^87","^7K","^7L"]]],"^6H",null,"^6I",["^J",[null,null]],"^8",1,"^6J",false,"^7",350,"^6K","^6L","^9",350,"^6M",4,"^6N",true,"^I",["^J",["^6D",["^J",[["^7J","^87","^7K","^7L"]]]]]],"~$run",["^ ","^6B",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",348,"^8",4,"^9",348,"^:",7,"^83","^39","^S",null,"^I",["^J",["^6D",["^J",[["^7J"]]]]]],"^83","^39","^M","^1Y","^6","reagent/ratom.cljs","^:",7,"^6G",["^J",[["^7J"]]],"^6H",null,"^6I",["^J",[null,null]],"^8",1,"^6J",false,"^7",347,"^6K","^6L","^9",348,"^6M",1,"^6N",true,"^I",["^J",["^6D",["^J",[["^7J"]]]]],"^S",null],"~$add-on-dispose!",["^ ","^6B",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",345,"^8",4,"^9",345,"^:",19,"^83","^3Q","^S",null,"^I",["^J",["^6D",["^J",[["^7J","~$f"]]]]]],"^83","^3Q","^M","^3=","^6","reagent/ratom.cljs","^:",19,"^6G",["^J",[["^7J","~$f"]]],"^6H",null,"^6I",["^J",[null,null]],"^8",1,"^6J",false,"^7",343,"^6K","^6L","^9",345,"^6M",2,"^6N",true,"^I",["^J",["^6D",["^J",[["^7J","~$f"]]]]],"^S",null],"~$temp-reaction",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",539,"^8",16,"^9",539,"^:",29,"^6C",true],"^6C",true,"^M","^3E","^6","reagent/ratom.cljs","^:",29,"^8",1,"^7",539,"^9",539,"^7B","^40"],"~$make-track!",["^ ","^6B",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",231,"^8",7,"^9",231,"^:",18,"^I",["^J",["^6D",["^J",[["~$f","^7="]]]]]],"^M","^1X","^6","reagent/ratom.cljs","^:",18,"^6G",["^J",[["~$f","^7="]]],"^6H",null,"^6I",["^J",[null,null]],"^8",1,"^6J",false,"^7",231,"^6K","^6L","^9",231,"^6M",2,"^6N",true,"^I",["^J",["^6D",["^J",[["~$f","^7="]]]]]],"~$generation",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",14,"^8",20,"^9",14,"^:",30,"^6C",true],"^6C",true,"^M","^1W","^6","reagent/ratom.cljs","^:",30,"^8",1,"^7",14,"^9",14,"^7B","~$number"],"~$run-in-reaction",["^ ","^6B",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",542,"^8",7,"^9",542,"^:",22,"^I",["^J",["^6D",["^J",[["~$f","^10","~$key","^88","^6F"]]]]],"^S","Evaluates `f` and returns the result.  If `f` calls `deref` on any ratoms,\n   creates a new Reaction that watches those atoms and calls `run` whenever\n   any of those watched ratoms change.  Also, the new reaction is added to\n   list of 'watches' of each of the ratoms. The `run` parameter is a function\n   that should expect one argument.  It is passed `obj` when run.  The `opts`\n   are any options accepted by a Reaction and will be set on the newly created\n   Reaction. Sets the newly created Reaction to the `key` on `obj`."],"^M","^3L","^6","reagent/ratom.cljs","^:",22,"^6G",["^J",[["~$f","^10","^8?","^88","^6F"]]],"^6H",null,"^6I",["^J",[null,null]],"^8",1,"^6J",false,"^7",542,"^6K","^6L","^9",542,"^6M",5,"^6N",true,"^I",["^J",["^6D",["^J",[["~$f","^10","^8?","^88","^6F"]]]]],"^S","Evaluates `f` and returns the result.  If `f` calls `deref` on any ratoms,\n   creates a new Reaction that watches those atoms and calls `run` whenever\n   any of those watched ratoms change.  Also, the new reaction is added to\n   list of 'watches' of each of the ratoms. The `run` parameter is a function\n   that should expect one argument.  It is passed `obj` when run.  The `opts`\n   are any options accepted by a Reaction and will be set on the newly created\n   Reaction. Sets the newly created Reaction to the `key` on `obj`."],"~$IDisposable",["^ ","^5",["^ ","^7W",true,"^6","reagent/ratom.cljs","^:",25,"^8",14,"^7",343,"^7X",["^ ","^7H",["^ ","^82",[["^7J"]],"^89",[["^7J","~$f"]]]],"^9",343,"^7Y",["^ ","~:dispose!",["^ ","^M","^82","^I",["^J",[["^7J"]]],"^S",null],"~:add-on-dispose!",["^ ","^M","^89","^I",["^J",[["^7J","~$f"]]],"^S",null]],"^7Z",["^J",["@interface"]]],"^7W",true,"^M","^3Q","^6","reagent/ratom.cljs","^:",25,"^8",1,"^7",343,"^7X",["^ ","^7H",["^ ","^82",[["^7J"]],"^89",[["^7J","~$f"]]]],"^7[",null,"^9",343,"^7B","^6L","^7Y",["^ ","^8A",["^ ","^M","^82","^I",["^J",[["^7J"]]],"^S",null],"^8B",["^ ","^M","^89","^I",["^J",[["^7J","~$f"]]],"^S",null]],"^80",["^E",["^40"]],"^7Z",["^J",["@interface"]]],"~$check-watches",["^ ","^6B",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",76,"^8",8,"^9",76,"^:",21,"^6C",true,"^I",["^J",["^6D",["^J",[["^7K","^7L"]]]]]],"^6C",true,"^M","^2H","^6","reagent/ratom.cljs","^:",21,"^6G",["^J",[["^7K","^7L"]]],"^6H",null,"^6I",["^J",[null,null]],"^8",1,"^6J",false,"^7",76,"^9",76,"^6M",2,"^6N",true,"^I",["^J",["^6D",["^J",[["^7K","^7L"]]]]]],"~$with-let-destroy",["^ ","^6B",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",331,"^8",7,"^9",331,"^:",23,"^I",["^J",["^6D",["^J",[["~$v"]]]]]],"^M","^2I","^6","reagent/ratom.cljs","^:",23,"^6G",["^J",[["~$v"]]],"^6H",null,"^6I",["^J",[null,null]],"^8",1,"^6J",false,"^7",331,"^6K",["^E",["^6L","^79"]],"^9",331,"^6M",1,"^6N",true,"^I",["^J",["^6D",["^J",[["~$v"]]]]]],"~$make-reaction",["^ ","^6B",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",523,"^8",7,"^9",523,"^:",20,"^I",["^J",["^6D",["^J",[["~$f","~$&",["^ ","^7D",["^7Q","~$on-set","~$on-dispose"]]]]]]],"^S","Creates a Reaction from a function.\n\n  - :auto-run - starts running the reaction immediately, and runs again when\n  atoms deferenced in the function change.\n  - :on-set - runs when reaction value is updated, before notifying watchers.\n  - :on-dispose - runs when the reaction is disposed.","^7F",["^ ","^6J",true,"^7G",1,"^6M",1,"^6G",[["^J",["~$f",["^ ","^7D",["^7Q","^8F","^8G"]]]]],"^I",["^J",[["~$f","~$&",["^ ","^7D",["^7Q","^8F","^8G"]]]]],"^6I",["^J",[null]]]],"^M","^38","^6","reagent/ratom.cljs","^:",20,"^7F",["^ ","^6J",true,"^7G",1,"^6M",1,"^6G",[["^J",["~$f",["^ ","^7D",["^7Q","^8F","^8G"]]]]],"^I",["^J",[["~$f","~$&",["^ ","^7D",["^7Q","^8F","^8G"]]]]],"^6I",["^J",[null]]],"^6G",[["^J",["~$f",["^ ","^7D",["^7Q","^8F","^8G"]]]]],"^6H",null,"^7G",1,"^6I",["^J",[null]],"^8",1,"^6J",true,"^7H",[["^ ","^7G",1,"^6J",true,"^7B","^40"]],"^7",523,"^6K","^6L","^9",523,"^6M",1,"^6N",true,"^I",["^J",[["~$f","~$&",["^ ","^7D",["^7Q","^8F","^8G"]]]]],"^S","Creates a Reaction from a function.\n\n  - :auto-run - starts running the reaction immediately, and runs again when\n  atoms deferenced in the function change.\n  - :on-set - runs when reaction value is updated, before notifying watchers.\n  - :on-dispose - runs when the reaction is disposed."],"~$add-w",["^ ","^6B",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",81,"^8",8,"^9",81,"^:",13,"^6C",true,"^I",["^J",["^6D",["^J",[["^7J","^8?","~$f"]]]]]],"^6C",true,"^M","^3X","^6","reagent/ratom.cljs","^:",13,"^6G",["^J",[["^7J","^8?","~$f"]]],"^6H",null,"^6I",["^J",[null,null]],"^8",1,"^6J",false,"^7",81,"^9",81,"^6M",3,"^6N",true,"^I",["^J",["^6D",["^J",[["^7J","^8?","~$f"]]]]]],"~$Reaction",["^ ","^7?",8,"^6P",["^E",["^6Q","^6R","^6S","^6T","^6U","^6V","^6W","^2W","^39","^3Q","^3T","^6Y"]],"^M","^40","^6","reagent/ratom.cljs","^:",18,"^7@",true,"^8",10,"^7",362,"^7A",false,"^9",362,"^7B","^7C","^76",["^E",["^6Q","^6R","^6S","^6T","^6V","^6W","^3T","^6Y"]]],"~$flush!",["^ ","^6B",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",511,"^8",7,"^9",511,"^:",13,"^I",["^J",["^6D",["^J",[[]]]]]],"^M","^2E","^6","reagent/ratom.cljs","^:",13,"^6G",["^J",[[]]],"^6H",null,"^6I",["^J",[null,null]],"^8",1,"^6J",false,"^7",511,"^6K","^79","^9",511,"^6M",0,"^6N",true,"^I",["^J",["^6D",["^J",[[]]]]]],"~$RCursor",["^ ","^7?",6,"^6P",["^E",["^6Q","^6R","^6S","^6T","^6U","^6V","^6W","^2W","^6X","^3T","^6Y","^6Z"]],"^M","^2Q","^6","reagent/ratom.cljs","^:",17,"^7@",true,"^8",10,"^7",248,"^7A",false,"^9",248,"^7B","^7C","^76",["^E",["^6Q","^6R","^6S","^6T","^6V","^6W","^6X","^3T","^6Y","^6Z"]]],"~$cached-reaction",["^ ","^6B",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",182,"^8",8,"^9",182,"^:",23,"^6C",true,"^I",["^J",["^6D",["^J",[["~$f","~$o","~$k","^10","~$destroy"]]]]]],"^6C",true,"^M","^2[","^6","reagent/ratom.cljs","^:",23,"^6G",["^J",[["~$f","~$o","~$k","^10","^8M"]]],"^6H",null,"^6I",["^J",[null,null]],"^8",1,"^6J",false,"^7",182,"^6K","^6L","^9",182,"^6M",5,"^6N",true,"^I",["^J",["^6D",["^J",[["~$f","~$o","~$k","^10","^8M"]]]]]],"~$Track",["^ ","^7?",3,"^6P",["^E",["^6S","^6T","^2W","^3T","^6Y"]],"^M","^3S","^6","reagent/ratom.cljs","^:",15,"^7@",true,"^8",10,"^7",206,"^7A",false,"^9",206,"^7B","^7C","^76",["^E",["^6S","^6T","^3T","^6Y"]]],"~$debug",["^ ","^M","^2L","^6","reagent/ratom.cljs","^7",13,"^8",1,"^9",13,"^:",24,"^7B","^85","^5",["^ ","^6","reagent/ratom.cljs","^7",13,"^8",19,"^9",13,"^:",24,"^7B","^85"]],"~$-running",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",15,"^8",20,"^9",15,"^:",28,"^6C",true],"^6C",true,"^M","^3[","^6","reagent/ratom.cljs","^:",28,"^8",1,"^7",15,"^9",15,"^7B","~$cljs.core/Atom"],"~$cursor",["^ ","^6B",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",317,"^8",7,"^9",317,"^:",13,"^I",["^J",["^6D",["^J",[["~$src","^72"]]]]]],"^M","^3U","^6","reagent/ratom.cljs","^:",13,"^6G",["^J",[["^8S","^72"]]],"^6H",null,"^6I",["^J",[null,null]],"^8",1,"^6J",false,"^7",317,"^6K","^2Q","^9",317,"^6M",2,"^6N",true,"^I",["^J",["^6D",["^J",[["^8S","^72"]]]]]],"~$Wrapper",["^ ","^7?",4,"^6P",["^E",["^6Q","^6R","^6S","^6V","^6W","^3T","^6Y"]],"^M","^30","^6","reagent/ratom.cljs","^:",17,"^7@",true,"^8",10,"^7",569,"^7A",false,"^9",569,"^7B","^7C","^76",["^E",["^6Q","^6R","^6S","^6V","^6W","^3T","^6Y"]]],"~$running",["^ ","^6B",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",23,"^8",7,"^9",23,"^:",14,"^I",["^J",["^6D",["^J",[[]]]]]],"^M","^37","^6","reagent/ratom.cljs","^:",14,"^6G",["^J",[[]]],"^6H",null,"^6I",["^J",[null,null]],"^8",1,"^6J",false,"^7",23,"^6K","^8=","^9",23,"^6M",0,"^6N",true,"^I",["^J",["^6D",["^J",[[]]]]]],"~$IRunnable",["^ ","^5",["^ ","^7W",true,"^6","reagent/ratom.cljs","^:",23,"^8",14,"^7",347,"^7X",["^ ","^7H",["^ ","^88",[["^7J"]]]],"^9",347,"^7Y",["^ ","~:run",["^ ","^M","^88","^I",["^J",[["^7J"]]],"^S",null]],"^7Z",["^J",["@interface"]]],"^7W",true,"^M","^39","^6","reagent/ratom.cljs","^:",23,"^8",1,"^7",347,"^7X",["^ ","^7H",["^ ","^88",[["^7J"]]]],"^7[",null,"^9",347,"^7B","^6L","^7Y",["^ ","^8W",["^ ","^M","^88","^I",["^J",[["^7J"]]],"^S",null]],"^80",["^E",["^40"]],"^7Z",["^J",["@interface"]]],"~$reactive?",["^ ","^6B",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",17,"^8",16,"^9",17,"^:",25,"^7B","^85","^I",["^J",["^6D",["^J",[[]]]]]],"^M","^44","^6","reagent/ratom.cljs","^:",25,"^6G",["^J",[[]]],"^6H",null,"^6I",["^J",[null,null]],"^8",1,"^6J",false,"^7",17,"^6K","^85","^9",17,"^6M",0,"^7B","^85","^6N",true,"^I",["^J",["^6D",["^J",[[]]]]]],"~$deref-capture",["^ ","^6B",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",46,"^8",8,"^9",46,"^:",21,"^6C",true,"^I",["^J",["^6D",["^J",[["~$f","~$r"]]]]],"^S","Returns `(in-context r f)`.  Calls `_update-watching` on r with any\n  `deref`ed atoms captured during `in-context`, if any differ from the\n  `watching` field of r.  Clears the `dirty?` flag on r.\n\n  Inside '_update-watching' along with adding the ratoms in 'r.watching' of reaction,\n  the reaction is also added to the list of watches on each ratoms f derefs."],"^6C",true,"^M","^46","^6","reagent/ratom.cljs","^:",21,"^6G",["^J",[["~$f","~$r"]]],"^6H",null,"^6I",["^J",[null,null]],"^8",1,"^6J",false,"^7",46,"^6K","^6L","^9",46,"^6M",2,"^6N",true,"^I",["^J",["^6D",["^J",[["~$f","~$r"]]]]],"^S","Returns `(in-context r f)`.  Calls `_update-watching` on r with any\n  `deref`ed atoms captured during `in-context`, if any differ from the\n  `watching` field of r.  Clears the `dirty?` flag on r.\n\n  Inside '_update-watching' along with adding the ratoms in 'r.watching' of reaction,\n  the reaction is also added to the list of watches on each ratoms f derefs."],"~$rea-queue",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",115,"^8",20,"^9",115,"^:",29,"^6C",true],"^6C",true,"^M","^3<","^6","reagent/ratom.cljs","^:",29,"^8",1,"^7",115,"^9",115,"^7B","^79"],"~$with-let-values",["^ ","^6B",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",335,"^8",7,"^9",335,"^:",22,"^I",["^J",["^6D",["^J",[["^8?"]]]]]],"^M","^4:","^6","reagent/ratom.cljs","^:",22,"^6G",["^J",[["^8?"]]],"^6H",null,"^6I",["^J",[null,null]],"^8",1,"^6J",false,"^7",335,"^6K",["^E",["^6L","~$array"]],"^9",335,"^6M",1,"^6N",true,"^I",["^J",["^6D",["^J",[["^8?"]]]]]],"~$track!",["^ ","^6B",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",242,"^8",7,"^9",242,"^:",13,"^I",["^J",["^6D",["^J",[["~$f","~$&","^7="]]]]],"^7F",["^ ","^6J",true,"^7G",1,"^6M",1,"^6G",[["^J",["~$f","^7="]]],"^I",["^J",[["~$f","~$&","^7="]]],"^6I",["^J",[null]]]],"^M","^33","^6","reagent/ratom.cljs","^:",13,"^7F",["^ ","^6J",true,"^7G",1,"^6M",1,"^6G",[["^J",["~$f","^7="]]],"^I",["^J",[["~$f","~$&","^7="]]],"^6I",["^J",[null]]],"^6G",[["^J",["~$f","^7="]]],"^6H",null,"^7G",1,"^6I",["^J",[null]],"^8",1,"^6J",true,"^7H",[["^ ","^7G",1,"^6J",true,"^7B","^6L"]],"^7",242,"^6K","^6L","^9",242,"^6M",1,"^6N",true,"^I",["^J",[["~$f","~$&","^7="]]]],"~$*ratom-context*",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",12,"^8",20,"^9",12,"^:",35,"~:dynamic",true,"~:declared",true],"^M","^3P","^6","reagent/ratom.cljs","^:",35,"^8",1,"^93",true,"^7",12,"^94",true,"^9",12,"^7B","^6L"],"~$check-derefs",["^ ","^6B",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",561,"^8",7,"^9",561,"^:",19,"^I",["^J",["^6D",["^J",[["~$f"]]]]]],"^M","^1V","^6","reagent/ratom.cljs","^:",19,"^6G",["^J",[["~$f"]]],"^6H",null,"^6I",["^J",[null,null]],"^8",1,"^6J",false,"^7",561,"^6K","~$cljs.core/IVector","^9",561,"^6M",1,"^6N",true,"^I",["^J",["^6D",["^J",[["~$f"]]]]]],"~$remove-w",["^ ","^6B",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",86,"^8",8,"^9",86,"^:",16,"^6C",true,"^I",["^J",["^6D",["^J",[["^7J","^8?"]]]]]],"^6C",true,"^M","^1Z","^6","reagent/ratom.cljs","^:",16,"^6G",["^J",[["^7J","^8?"]]],"^6H",null,"^6I",["^J",[null,null]],"^8",1,"^6J",false,"^7",86,"^9",86,"^6M",2,"^6N",true,"^I",["^J",["^6D",["^J",[["^7J","^8?"]]]]]],"~$->Wrapper",["^ ","^6B",null,"^5",["^ ","^6P",["^E",["^6Q","^6R","^6S","^6V","^6W","^3T","^6Y"]],"^6","reagent/ratom.cljs","^:",17,"^8",10,"^6[","^70","^7",569,"^9",569,"^I",["^J",["^6D",["^J",[["^73","~$callback","~$changed","^74"]]]]],"^76",["^E",["^6Q","^6R","^6S","^6V","^6W","^3T","^6Y"]],"^S","Positional factory function for reagent.ratom/Wrapper."],"^6P",["^E",["^6Q","^6R","^6S","^6V","^6W","^3T","^6Y"]],"^M","^3R","^6","reagent/ratom.cljs","^:",17,"^6G",["^J",[["^73","^99","^9:","^74"]]],"^6H",null,"^6I",["^J",[null,null]],"^8",1,"^6J",false,"^6[","^70","^7",569,"^6K","^30","^9",569,"^6M",4,"^6N",true,"^I",["^J",["^6D",["^J",[["^73","^99","^9:","^74"]]]]],"^76",["^E",["^6Q","^6R","^6S","^6V","^6W","^3T","^6Y"]],"^S","Positional factory function for reagent.ratom/Wrapper."],"~$arr-len",["^ ","^6B",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",26,"^8",16,"^9",26,"^:",23,"^7B","^8=","^6C",true,"^I",["^J",["^6D",["^J",[["~$x"]]]]]],"^6C",true,"^M","^2?","^6","reagent/ratom.cljs","^:",23,"^6G",["^J",[["~$x"]]],"^6H",null,"^6I",["^J",[null,null]],"^8",1,"^6J",false,"^7",26,"^6K","^8=","^9",26,"^6M",1,"^7B","^8=","^6N",true,"^I",["^J",["^6D",["^J",[["~$x"]]]]]],"~$->RAtom",["^ ","^6B",null,"^5",["^ ","^6P",["^E",["^6Q","^6R","^6S","^6T","^6V","^6W","^2W","^6X","^3T","^6Y","^6Z"]],"^6","reagent/ratom.cljs","^:",15,"^8",10,"^6[","^70","^7",127,"^9",127,"^I",["^J",["^6D",["^J",[["^73","^75","^7E","^74"]]]]],"^76",["^E",["^6Q","^6R","^6S","^6T","^6V","^6W","^6X","^3T","^6Y","^6Z"]],"^S","Positional factory function for reagent.ratom/RAtom."],"^6P",["^E",["^6Q","^6R","^6S","^6T","^6V","^6W","^2W","^6X","^3T","^6Y","^6Z"]],"^M","^25","^6","reagent/ratom.cljs","^:",15,"^6G",["^J",[["^73","^75","^7E","^74"]]],"^6H",null,"^6I",["^J",[null,null]],"^8",1,"^6J",false,"^6[","^70","^7",127,"^6K","^42","^9",127,"^6M",4,"^6N",true,"^I",["^J",["^6D",["^J",[["^73","^75","^7E","^74"]]]]],"^76",["^E",["^6Q","^6R","^6S","^6T","^6V","^6W","^6X","^3T","^6Y","^6Z"]],"^S","Positional factory function for reagent.ratom/RAtom."],"~$->Track",["^ ","^6B",null,"^5",["^ ","^6P",["^E",["^6S","^6T","^2W","^3T","^6Y"]],"^6","reagent/ratom.cljs","^:",15,"^8",10,"^6[","^70","^7",206,"^9",206,"^I",["^J",["^6D",["^J",[["~$f","^7=","^R"]]]]],"^76",["^E",["^6S","^6T","^3T","^6Y"]],"^S","Positional factory function for reagent.ratom/Track."],"^6P",["^E",["^6S","^6T","^2W","^3T","^6Y"]],"^M","^3M","^6","reagent/ratom.cljs","^:",15,"^6G",["^J",[["~$f","^7=","^R"]]],"^6H",null,"^6I",["^J",[null,null]],"^8",1,"^6J",false,"^6[","^70","^7",206,"^6K","^3S","^9",206,"^6M",3,"^6N",true,"^I",["^J",["^6D",["^J",[["~$f","^7=","^R"]]]]],"^76",["^E",["^6S","^6T","^3T","^6Y"]],"^S","Positional factory function for reagent.ratom/Track."]],"^1:",["^ ","^P","^P","^B","^B","^12","^12"],"~:cljs.analyzer/constants",["^ ","^18",["^E",["~:path","~:on-set","^7R","^7P","^85","^R","^99","^5","~:else","^72","^7=","~:validator","^74","^75","~:val","^7E","^7N","~:no-cache","^71","^73","~:auto-run","~:on-dispose","~:f","^7B","~:mutable","^9:","^7Q","^7O","~$f"]],"~:order",["^9C","^73","^9G","^75","^7E","^74","^5","^9B","^9A","^9F","~:f","~$f","^7=","^R","^9E","^9?","^71","^72","^9@","^9D","^7N","^7B","^85","^7O","^7P","^7Q","^7R","^99","^9:"]],"^1B",["^ ","^1:",["^E",[]],"^19",["^E",[]]],"^1C",[],"^1D",["^13","^12","^[","^B","^14","^15","^11"]],"^O","^P","~:ns-specs",["^ "],"~:ns-spec-vars",["^E",[]],"~:compiler-options",["^4@",[["^9K","~:static-fns"],true,["~:js-options","~:use-babel"],null,["^9K","~:shadow-tweaks"],null,["^9K","~:source-map-inline"],null,["^9K","~:shadow-optimize-constants"],null,["^9K","~:elide-asserts"],false,["^9K","~:optimize-constants"],null,["^9K","^1I"],null,["^9K","~:external-config"],null,["^9K","~:tooling-config"],null,["^9K","~:emit-constants"],null,["^9K","~:load-tests"],null,["^9K","~:form-size-threshold"],null,["^9K","~:global-goog-object&array"],null,["^9K","~:data-readers"],null,["~:shadow.build/config","~:target"],"~:browser",["^9K","~:infer-externs"],"~:auto",["^9K","^1K"],null,["^9M","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^9K","~:fn-invoke-direct"],null,["^9K","~:source-map"],"/dev/null"]]]